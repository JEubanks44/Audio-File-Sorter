<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MusicApiCollection</name>
    </assembly>
    <members>
        <member name="T:MusicApiCollection.Http">
            <summary>
            Http Functions
            </summary>
        </member>
        <member name="M:MusicApiCollection.Http.Request(System.String)">
            <summary>
                Make a Webrequest
            </summary>
            <param name="url">Url</param>
            <returns></returns>
        </member>
        <member name="M:MusicApiCollection.Http.Post(System.String,System.String)">
            <summary>
                Make a Webrequest on FreeDB with POST
            </summary>
            <param name="command">Data to Post</param>
            <param name="url">URL</param>
            <returns></returns>
        </member>
        <member name="T:MusicApiCollection.Json">
            <summary>
                Json Functions
            </summary>
        </member>
        <member name="M:MusicApiCollection.Json.Deserialize``1(System.String)">
            <summary>
                Deserialize a json string as Object
            </summary>
            <typeparam name="T">Objecttype</typeparam>
            <param name="json">Jsonstring</param>
            <returns></returns>
        </member>
        <member name="T:MusicApiCollection.Xml">
            <summary>
                Xml Functions
            </summary>
        </member>
        <member name="M:MusicApiCollection.Xml.Deserialize``1(System.String)">
            <summary>
                Deserialize a xml string as Object
            </summary>
            <param name="xml">xml string</param>
            <typeparam name="T">Objecttype</typeparam>
            <returns></returns>
        </member>
        <member name="T:MusicApiCollection.Data.Artist">
            <summary>
                Global Artist
            </summary>
        </member>
        <member name="P:MusicApiCollection.Data.Artist.FanartTv">
            <summary>
                FanartTv Data
            </summary>
        </member>
        <member name="P:MusicApiCollection.Data.Artist.MusicBrainz">
            <summary>
                MucicBrainz Data
            </summary>
        </member>
        <member name="P:MusicApiCollection.Data.Artist.TheAudioDB">
            <summary>
                TheAudioDb Data
            </summary>
        </member>
        <member name="T:MusicApiCollection.Data.Disc">
            <summary>
                Global Disc
            </summary>
        </member>
        <member name="P:MusicApiCollection.Data.Disc.Title">
            <summary>
                Title
            </summary>
        </member>
        <member name="P:MusicApiCollection.Data.Disc.Artist">
            <summary>
                Artist
            </summary>
        </member>
        <member name="P:MusicApiCollection.Data.Disc.DiskLength">
            <summary>
                DiskLength
            </summary>
        </member>
        <member name="P:MusicApiCollection.Data.Disc.Genre">
            <summary>
                Genre
            </summary>
        </member>
        <member name="P:MusicApiCollection.Data.Disc.Categorie">
            <summary>
                Genre
            </summary>
        </member>
        <member name="P:MusicApiCollection.Data.Disc.Year">
            <summary>
                Year
            </summary>
        </member>
        <member name="P:MusicApiCollection.Data.Disc.FreeDbId">
            <summary>
                FrreDB DiskId
            </summary>
        </member>
        <member name="P:MusicApiCollection.Data.Disc.TheAudioDbId">
            <summary>
                FrreDB DiskId
            </summary>
        </member>
        <member name="P:MusicApiCollection.Data.Disc.MusicBrainzId">
            <summary>
                FrreDB DiskId
            </summary>
        </member>
        <member name="P:MusicApiCollection.Data.Disc.GraceNoteId">
            <summary>
                FrreDB DiskId
            </summary>
        </member>
        <member name="P:MusicApiCollection.Data.Disc.Tracks">
            <summary>
                Tracks
            </summary>
        </member>
        <member name="P:MusicApiCollection.Data.Disc.Attributes">
            <summary>
                Attributes
            </summary>
        </member>
        <member name="P:MusicApiCollection.Data.Disc.Status">
            <summary>
                Status
            </summary>
        </member>
        <member name="P:MusicApiCollection.Data.Disc.Country">
            <summary>
                Country
            </summary>
        </member>
        <member name="P:MusicApiCollection.Data.Disc.Barcode">
            <summary>
                Barcode
            </summary>
        </member>
        <member name="P:MusicApiCollection.Data.Disc.Asin">
            <summary>
                Asin
            </summary>
        </member>
        <member name="T:MusicApiCollection.Data.DiscTrack">
            <summary>
                DiscTrack
            </summary>
        </member>
        <member name="P:MusicApiCollection.Data.DiscTrack.FrameOffset">
            <summary>
                Frameoffset
            </summary>
        </member>
        <member name="P:MusicApiCollection.Data.DiscTrack.RunTime">
            <summary>
                Runtime
            </summary>
        </member>
        <member name="P:MusicApiCollection.Data.DiscTrack.Title">
            <summary>
                Title
            </summary>
        </member>
        <member name="P:MusicApiCollection.Data.DiscTrack.Artist">
            <summary>
                Artist
            </summary>
        </member>
        <member name="T:MusicApiCollection.Events.Exceptions">
            <summary>
                Handler for Exceptions
            </summary>
        </member>
        <member name="T:MusicApiCollection.Events.Exceptions.EventHandler">
            <remarks />
        </member>
        <member name="E:MusicApiCollection.Events.Exceptions.Call">
            <summary>
                EventHandler for Exceptions
            </summary>
        </member>
        <member name="P:MusicApiCollection.Events.Exceptions.Instance">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Events.Exceptions.Message">
            <summary>
                Current Exception
            </summary>
        </member>
        <member name="F:MusicApiCollection.Events.Exceptions.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="M:MusicApiCollection.Events.Exceptions.#ctor">
            <summary>
                Create new Exceptions
            </summary>
        </member>
        <member name="M:MusicApiCollection.Events.Exceptions.GetInstance">
            <summary>
                Instance of the Exceptions
            </summary>
            <returns>The Instance</returns>
        </member>
        <member name="M:MusicApiCollection.Events.Exceptions.NewException(System.Exception)">
            <summary>
                Rise a new Exception
            </summary>
            <param name="ex">The Exception</param>
        </member>
        <member name="T:MusicApiCollection.Events.EventArg">
            <summary>
                Exception Eventargument
            </summary>
        </member>
        <member name="P:MusicApiCollection.Events.EventArg.Message">
            <summary>
                The Exceptionmessage
            </summary>
        </member>
        <member name="P:MusicApiCollection.Events.EventArg.Exception">
            <summary>
             The Full Exception
            </summary>
        </member>
        <member name="T:MusicApiCollection.Events.Logging">
            <summary>
                Handler for Logging
            </summary>
        </member>
        <member name="T:MusicApiCollection.Events.Logging.EventHandler">
            <remarks />
        </member>
        <member name="M:MusicApiCollection.Events.Logging.#ctor">
            <summary>
                Create new Logging
            </summary>
        </member>
        <member name="P:MusicApiCollection.Events.Logging.Instance">
            <remarks />
        </member>
        <member name="E:MusicApiCollection.Events.Logging.Call">
            <summary>
                EventHandler for Logging
            </summary>
        </member>
        <member name="M:MusicApiCollection.Events.Logging.GetInstance">
            <summary>
                Instance of the Logging
            </summary>
        </member>
        <member name="M:MusicApiCollection.Events.Logging.NewLogEntry(MusicApiCollection.Events.LogEntry)">
            <summary>
            </summary>
            <param name="entry"></param>
        </member>
        <member name="M:MusicApiCollection.Events.Logging.Clear">
            <summary>
                Clear the Exception
            </summary>
        </member>
        <member name="T:MusicApiCollection.Events.LogEntry">
            <summary>
                Logentry
            </summary>
        </member>
        <member name="M:MusicApiCollection.Events.LogEntry.#ctor(System.String,System.String,System.String,System.Collections.Generic.List{MusicApiCollection.Events.Para})">
            <summary>
                Create a new LogEntry
            </summary>
        </member>
        <member name="M:MusicApiCollection.Events.LogEntry.#ctor(System.String,System.String,System.String,MusicApiCollection.Events.Para)">
            <summary>
                Create a new LogEntry
            </summary>
        </member>
        <member name="M:MusicApiCollection.Events.LogEntry.#ctor(System.String,System.String,System.String)">
            <summary>
                Create a new LogEntry
            </summary>
        </member>
        <member name="P:MusicApiCollection.Events.LogEntry.Namespace">
            <summary>
                The Namespace of the Caller
            </summary>
        </member>
        <member name="P:MusicApiCollection.Events.LogEntry.Class">
            <summary>
                The Class of the Caller
            </summary>
        </member>
        <member name="P:MusicApiCollection.Events.LogEntry.Function">
            <summary>
                The Method of the Caller
            </summary>
        </member>
        <member name="P:MusicApiCollection.Events.LogEntry.Parameters">
            <summary>
                The Parameters for the Function
            </summary>
        </member>
        <member name="T:MusicApiCollection.Events.Para">
            <summary>
                The parameter for the Function
            </summary>
        </member>
        <member name="M:MusicApiCollection.Events.Para.#ctor(System.String,System.String)">
            <summary>
                Create a new Parameter
            </summary>
            <param name="name">Parametername</param>
            <param name="value">Parametervalue</param>
        </member>
        <member name="P:MusicApiCollection.Events.Para.Name">
            <summary>
                Parametername
            </summary>
        </member>
        <member name="P:MusicApiCollection.Events.Para.Value">
            <summary>
                Parametervalue
            </summary>
        </member>
        <member name="T:MusicApiCollection.Helper">
            <summary>
                Helpers for All
            </summary>
        </member>
        <member name="M:MusicApiCollection.Helper.CalculateTrackRuntimes(System.Collections.Generic.List{System.Int32},System.Int32)">
            <summary>
                Calculate the Runtime for Tracks
            </summary>
            <param name="offsets">FrameOffsets</param>
            <param name="runtime">Runtime of the Disc</param>
            <returns></returns>
        </member>
        <member name="M:MusicApiCollection.Helper.GetSubstring(System.String,System.String,System.String)">
            <summary>
                Get a Substring
            </summary>
            <param name="value">Original string</param>
            <param name="start">Start</param>
            <param name="ende">Ende</param>
            <returns></returns>
        </member>
        <member name="M:MusicApiCollection.Helper.GetSubstring(System.String,System.String,System.String,System.String)">
            <summary>
                Get a Substring
            </summary>
            <param name="value">Original string</param>
            <param name="start">Start1</param>
            <param name="start2">Start after Start1</param>
            <param name="ende">Ende</param>
            <returns></returns>
        </member>
        <member name="M:MusicApiCollection.Helper.ToWords(System.String)">
            <summary>
                Make first Letter ToUpper and all other ToLower
            </summary>
            <param name="value">String with the words</param>
            <returns></returns>
        </member>
        <member name="T:MusicApiCollection.Search">
            <summary>
            Global Search over all Sites
            </summary>
        </member>
        <member name="M:MusicApiCollection.Search.Disc(System.String,System.String)">
            <summary>
            Search Album
            </summary>
            <param name="artist">Artist</param>
            <param name="album">Album</param>
            <returns></returns>
        </member>
        <member name="T:MusicApiCollection.Settings">
            <summary>
                Global settings and Infos
            </summary>
        </member>
        <member name="P:MusicApiCollection.Settings.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="F:MusicApiCollection.Settings.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="T:MusicApiCollection.Settings.Http">
            <summary>
                Settings for the Webclient
            </summary>
        </member>
        <member name="P:MusicApiCollection.Settings.Http.HttpWebRequestTimeout">
            <summary>
                Timeout for HttpWebRequest
            </summary>
        </member>
        <member name="P:MusicApiCollection.Settings.Http.UserAgent">
            <summary>
                UserAgent for WebRequest
            </summary>
        </member>
        <member name="T:MusicApiCollection.Settings.AcoustId">
            <summary>
                Settings for AcoustId
            </summary>
        </member>
        <member name="P:MusicApiCollection.Settings.AcoustId.ClientKey">
            <summary>
                ClientKey for AcoustId
            </summary>
        </member>
        <member name="T:MusicApiCollection.Settings.TheAudioDb">
            <summary>
                Settings for TheAudioDb
            </summary>
        </member>
        <member name="P:MusicApiCollection.Settings.TheAudioDb.ApiKey">
            <summary>
                ApiKey for TheAudoDB
            </summary>
        </member>
        <member name="T:MusicApiCollection.Settings.FanartTv">
            <summary>
                Settings for FanartTv
            </summary>
        </member>
        <member name="P:MusicApiCollection.Settings.FanartTv.ApiKey">
            <summary>
                ApiKey for FanartTv
            </summary>
        </member>
        <member name="P:MusicApiCollection.Settings.FanartTv.ClientKey">
            <summary>
                ClientKey for FanartTv
            </summary>
        </member>
        <member name="P:MusicApiCollection.Settings.FanartTv.Server">
            <summary>
                The current Server
            </summary>
        </member>
        <member name="P:MusicApiCollection.Settings.FanartTv.Proxy">
            <summary>
                Transparent Proxy
            </summary>
        </member>
        <member name="T:MusicApiCollection.Settings.FreeDb">
            <summary>
                Settings for FreeDb
            </summary>
        </member>
        <member name="P:MusicApiCollection.Settings.FreeDb.ServerUrl">
            <summary>
                The FreeDb Server as Full string. <br />
                Example: http://freedb.freedb.org/~cddb/cddb.cgi
            </summary>
        </member>
        <member name="P:MusicApiCollection.Settings.FreeDb.Username">
            <summary>
                Login name of user. <br />
                Example: johndoe
            </summary>
        </member>
        <member name="P:MusicApiCollection.Settings.FreeDb.Hostname">
            <summary>
                Host name of client. <br />
                Example: abc.fubar.com
            </summary>
        </member>
        <member name="P:MusicApiCollection.Settings.FreeDb.Clientname">
            <summary>
                The name of the connecting client. <br />
                Example: xmcd, cda, EasyCD, et cetera. <br />
                Do not use the name of another client which already exists
            </summary>
        </member>
        <member name="P:MusicApiCollection.Settings.FreeDb.Version">
            <summary>
                Version number of client software. <br />
                Example: v1.0PL0
            </summary>
        </member>
        <member name="P:MusicApiCollection.Settings.FreeDb.Level">
            <summary>
                Protocol level 5 + 6 specification by freedb developer team
            </summary>
        </member>
        <member name="T:MusicApiCollection.Settings.GraceNote">
            <summary>
                Settings for GraceNote
            </summary>
        </member>
        <member name="F:MusicApiCollection.Settings.GraceNote.UserId">
            <summary>
                User ID
            </summary>
        </member>
        <member name="F:MusicApiCollection.Settings.GraceNote.ClientId">
            <summary>
                Client ID
            </summary>
        </member>
        <member name="P:MusicApiCollection.Settings.GraceNote.ServerUrl">
            <summary>
                Server Url
            </summary>
        </member>
        <member name="P:MusicApiCollection.Settings.GraceNote.ResponseLanguage">
            <summary>
                A query can include an optional LANG element to specify a preferred natural language in which to receive response
                metadata. <br />
                The body of the LANG element should be a three-character language code as defined by the ISO 639-2 standard. <br />
                When possible, the Gracenote Media Recognition Service returns localized metadata in the language requested. <br />
                If no metadata is available in the requested language, or if there is no language preference, metadata is returned
                in English(eng) by default. <br />
                Contact your Gracenote Global Services + Support representative for a list of supported languages.
            </summary>
        </member>
        <member name="T:MusicApiCollection.Settings.Discogs">
            <summary>
                Settings for Discogs
            </summary>
        </member>
        <member name="P:MusicApiCollection.Settings.Discogs.Key">
            <summary>
                User Key
            </summary>
        </member>
        <member name="P:MusicApiCollection.Settings.Discogs.SecretKey">
            <summary>
                User Secret Key
            </summary>
        </member>
        <member name="T:MusicApiCollection.Sites.AcoustID.Data.Lookup">
            <summary>
                Result
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.AcoustID.Data.Lookup.Data">
            <summary>
                Data for the Request
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.AcoustID.Data.Lookup.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.AcoustID.Data.Lookup.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.AcoustID.Data.Lookup.Response">
            <summary>
                Response
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.AcoustID.Data.Lookup.#ctor">
            <summary>
                Create new Lookup and clear the log
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.AcoustID.Data.Lookup.#ctor(MusicApiCollection.Sites.AcoustID.Data.LookupResult)">
            <summary>
                Create new Lookup with Result
            </summary>
            <param name="data">Result</param>
        </member>
        <member name="T:MusicApiCollection.Sites.AcoustID.Data.LookupResult">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.AcoustID.Data.LookupResult.Status">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.AcoustID.Data.LookupResult.Results">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.AcoustID.Data.Result">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.AcoustID.Data.Result.Recordings">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.AcoustID.Data.Result.Score">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.AcoustID.Data.Result.Id">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.AcoustID.Data.RecordingResult">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.AcoustID.Data.RecordingResult.Id">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.AcoustID.Data.RecordingResult.Artists">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.AcoustID.Data.RecordingResult.Duration">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.AcoustID.Data.RecordingResult.Title">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.AcoustID.Data.Artist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.AcoustID.Data.Artist.Id">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.AcoustID.Data.Artist.Name">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.AcoustID.Search">
            <summary>
                Search on AcoustId
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.AcoustID.Search.Lookup(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="duration"></param>
            <param name="fingerprint"></param>
            <param name="clientKey"></param>
            <returns></returns>
        </member>
        <member name="T:MusicApiCollection.Sites.CoverArtArchive.Data.Covers">
            <summary>
                Result
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.CoverArtArchive.Data.Covers.Data">
            <summary>
                Data for the Request
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.CoverArtArchive.Data.Covers.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.CoverArtArchive.Data.Covers.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.CoverArtArchive.Data.Covers.Response">
            <summary>
                Response
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.CoverArtArchive.Data.Covers.#ctor">
            <summary>
                Create new Covers and clear the log
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.CoverArtArchive.Data.Covers.#ctor(MusicApiCollection.Sites.CoverArtArchive.Data.CoversResult)">
            <summary>
                Create new Covers with Result
            </summary>
            <param name="data">Result</param>
        </member>
        <member name="T:MusicApiCollection.Sites.CoverArtArchive.Data.CoversResult">
            <summary>
                List of Covers
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.CoverArtArchive.Data.CoversResult.Images">
            <summary>
                List of Coverimages
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.CoverArtArchive.Data.CoversResult.Release">
            <summary>
                Release
            </summary>
        </member>
        <member name="T:MusicApiCollection.Sites.CoverArtArchive.Data.Cover">
            <summary>
                All Data of a Cover
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.CoverArtArchive.Data.Cover.Types">
            <summary>
                List of Imagetypes
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.CoverArtArchive.Data.Cover.Front">
            <summary>
                Frontimage
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.CoverArtArchive.Data.Cover.Back">
            <summary>
                Backimage
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.CoverArtArchive.Data.Cover.Edit">
            <summary>
                Edit?
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.CoverArtArchive.Data.Cover.Image">
            <summary>
                Image
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.CoverArtArchive.Data.Cover.Comment">
            <summary>
                Comment
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.CoverArtArchive.Data.Cover.Approved">
            <summary>
                Approved?
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.CoverArtArchive.Data.Cover.Id">
            <summary>
                ArchiveId
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.CoverArtArchive.Data.Cover.Thumbnails">
            <summary>
                List of Thumbnails
            </summary>
        </member>
        <member name="T:MusicApiCollection.Sites.CoverArtArchive.Data.Thumbnails">
            <summary>
                Url for the Thumbnail
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.CoverArtArchive.Data.Thumbnails.Large">
            <summary>
                Url for the large Thumbnail
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.CoverArtArchive.Data.Thumbnails.Small">
            <summary>
                Url for the small Thumbnail
            </summary>
        </member>
        <member name="T:MusicApiCollection.Sites.CoverArtArchive.Search">
            <summary>
                Search on CoverArtArchive
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.CoverArtArchive.Search.ReleaseGroup(System.String)">
            <summary>
                Covers for a Releasegroup
            </summary>
            <param name="mbid">MusicbrainzId</param>
            <example>
                Example shows the typical use of the function
                <code language="vbnet">
            Dim ret2 = Search.ReleaseGroup("c31a5e2b-0bf8-32e0-8aeb-ef4ba9973932")
                </code>
                <code language="c#">
            var ret2 = Search.ReleaseGroup("c31a5e2b-0bf8-32e0-8aeb-ef4ba9973932");
                </code>
            </example>
            <returns>
                Covers
            </returns>
        </member>
        <member name="M:MusicApiCollection.Sites.CoverArtArchive.Search.Release(System.String)">
            <summary>
                Covers for a Release
            </summary>
            <param name="mbid">MusicbrainzId</param>
            <example>
                Example shows the typical use of the function
                <code language="vbnet">
            Dim ret1 = Search.Release("03f9d988-8555-4cdf-afb1-a29c9487bb15")
                </code>
                <code language="c#">
            var ret1 = Search.Release("03f9d988-8555-4cdf-afb1-a29c9487bb15");
                </code>
            </example>
            <returns>
                Covers
            </returns>
        </member>
        <member name="T:MusicApiCollection.Sites.Discogs.Data.AllLabelReleases">
            <remarks />
        </member>
        <member name="F:MusicApiCollection.Sites.Discogs.Data.AllLabelReleases.Data">
            <summary>
                All possible Data
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.Discogs.Data.AllLabelReleases.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.Discogs.Data.AllLabelReleases.#ctor">
            <summary>
                Create new AllLabelReleases and clear the log
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.Discogs.Data.AllLabelReleases.#ctor(MusicApiCollection.Sites.Discogs.Data.AllLabelReleasesResult)">
            <summary>
                Create new AllLabelReleases with Result
            </summary>
            <param name="data">Result</param>
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.AllLabelReleases.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.AllLabelReleases.Response">
            <summary>
                Response
            </summary>
        </member>
        <member name="T:MusicApiCollection.Sites.Discogs.Data.AllLabelReleasesResult">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.AllLabelReleasesResult.Pagination">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.AllLabelReleasesResult.Releases">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.Discogs.Data.LabelRelease">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.LabelRelease.Status">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.LabelRelease.Thumb">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.LabelRelease.Format">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.LabelRelease.Title">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.LabelRelease.Catno">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.LabelRelease.Year">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.LabelRelease.ResourceUrl">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.LabelRelease.Artist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.LabelRelease.Id">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.Discogs.Data.Artist">
            <remarks />
        </member>
        <member name="F:MusicApiCollection.Sites.Discogs.Data.Artist.Data">
            <summary>
                All possible Data
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Artist.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.Discogs.Data.Artist.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Artist.Response">
            <summary>
                Response
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.Discogs.Data.Artist.#ctor">
            <summary>
            Create new Artist and clear the log
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.Discogs.Data.Artist.#ctor(MusicApiCollection.Sites.Discogs.Data.ArtistResult)">
            <summary>
                Create new Artist with Result
            </summary>
            <param name="data">Result</param>
        </member>
        <member name="T:MusicApiCollection.Sites.Discogs.Data.ArtistResult">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ArtistResult.Profile">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ArtistResult.ReleasesUrl">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ArtistResult.Name">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ArtistResult.Namevariations">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ArtistResult.Uri">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ArtistResult.Images">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ArtistResult.ResourceUrl">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ArtistResult.Aliases">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ArtistResult.Id">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ArtistResult.DataQuality">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ArtistResult.Realname">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.Discogs.Data.Alias">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Alias.ResourceUrl">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Alias.Id">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Alias.Name">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.Discogs.Data.ArtistRelease">
            <remarks />
        </member>
        <member name="F:MusicApiCollection.Sites.Discogs.Data.ArtistRelease.Data">
            <summary>
                All possible Data
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ArtistRelease.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.Discogs.Data.ArtistRelease.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ArtistRelease.Response">
            <summary>
                Response
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.Discogs.Data.ArtistRelease.#ctor">
            <summary>
            Create new ArtistRelease and clear the log
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.Discogs.Data.ArtistRelease.#ctor(MusicApiCollection.Sites.Discogs.Data.ArtistReleaseResult)">
            <summary>
                Create new ArtistRelease with Result
            </summary>
            <param name="data">Result</param>
        </member>
        <member name="T:MusicApiCollection.Sites.Discogs.Data.ArtistReleaseResult">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ArtistReleaseResult.Pagination">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ArtistReleaseResult.Releases">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.Discogs.Data.ArtistReleases">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ArtistReleases.Status">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ArtistReleases.Thumb">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ArtistReleases.Title">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ArtistReleases.Format">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ArtistReleases.Label">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ArtistReleases.Role">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ArtistReleases.Year">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ArtistReleases.ResourceUrl">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ArtistReleases.Artist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ArtistReleases.Type">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ArtistReleases.Id">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ArtistReleases.MainRelease">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.Discogs.Data.Video">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Video.Duration">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Video.Description">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Video.Embed">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Video.Uri">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Video.Title">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.Discogs.Data.Image">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Image.Uri">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Image.Height">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Image.Width">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Image.ResourceUrl">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Image.Type">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Image.Uri150">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.Discogs.Data.ReleaseArtist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ReleaseArtist.Join">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ReleaseArtist.Name">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ReleaseArtist.Anv">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ReleaseArtist.Tracks">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ReleaseArtist.Role">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ReleaseArtist.ResourceUrl">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ReleaseArtist.Id">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.Discogs.Data.Extraartist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Extraartist.Join">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Extraartist.Name">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Extraartist.Anv">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Extraartist.Tracks">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Extraartist.Role">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Extraartist.ResourceUrl">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Extraartist.Id">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.Discogs.Data.Tracklist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Tracklist.Duration">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Tracklist.Position">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Tracklist.Type">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Tracklist.Title">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Tracklist.Extraartists">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.Discogs.Data.Pagination">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Pagination.PerPage">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Pagination.Items">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Pagination.Page">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Pagination.Urls">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Pagination.Pages">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.Discogs.Data.Urls">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Urls.Last">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Urls.Next">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.Discogs.Data.Community">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Community.Status">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Community.Rating">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Community.Have">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Community.Contributors">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Community.Want">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Community.Submitter">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Community.DataQuality">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.Discogs.Data.Label">
            <remarks />
        </member>
        <member name="F:MusicApiCollection.Sites.Discogs.Data.Label.Data">
            <summary>
                All possible Data
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Label.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.Discogs.Data.Label.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Label.Response">
            <summary>
                Response
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.Discogs.Data.Label.#ctor">
            <summary>
            Create new Label and clear the log
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.Discogs.Data.Label.#ctor(MusicApiCollection.Sites.Discogs.Data.LabelResult)">
            <summary>
                Create new Label with Result
            </summary>
            <param name="data">Result</param>
        </member>
        <member name="T:MusicApiCollection.Sites.Discogs.Data.LabelResult">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.LabelResult.Profile">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.LabelResult.ReleasesUrl">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.LabelResult.Name">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.LabelResult.ParentLabel">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.LabelResult.Uri">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.LabelResult.Images">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.LabelResult.ResourceUrl">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.LabelResult.Id">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.LabelResult.DataQuality">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.Discogs.Data.ParentLabel">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ParentLabel.ResourceUrl">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ParentLabel.Id">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ParentLabel.Name">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.Discogs.Data.MasterRelease">
            <remarks />
        </member>
        <member name="F:MusicApiCollection.Sites.Discogs.Data.MasterRelease.Data">
            <summary>
                All possible Data
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.MasterRelease.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.Discogs.Data.MasterRelease.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.MasterRelease.Response">
            <summary>
                Response
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.Discogs.Data.MasterRelease.#ctor">
            <summary>
            Create new MasterRelease and clear the log
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.Discogs.Data.MasterRelease.#ctor(MusicApiCollection.Sites.Discogs.Data.MasterReleaseResult)">
            <summary>
                Create new MasterRelease with Result
            </summary>
            <param name="data">Result</param>
        </member>
        <member name="T:MusicApiCollection.Sites.Discogs.Data.MasterReleaseResult">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.MasterReleaseResult.Styles">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.MasterReleaseResult.Genres">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.MasterReleaseResult.Videos">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.MasterReleaseResult.Title">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.MasterReleaseResult.MainRelease">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.MasterReleaseResult.MainReleaseUrl">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.MasterReleaseResult.Uri">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.MasterReleaseResult.Artists">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.MasterReleaseResult.VersionsUrl">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.MasterReleaseResult.Year">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.MasterReleaseResult.Images">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.MasterReleaseResult.ResourceUrl">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.MasterReleaseResult.Tracklist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.MasterReleaseResult.Id">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.MasterReleaseResult.DataQuality">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.Discogs.Data.MasterReleaseVersion">
            <remarks />
        </member>
        <member name="F:MusicApiCollection.Sites.Discogs.Data.MasterReleaseVersion.Data">
            <summary>
                All possible Data
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.MasterReleaseVersion.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.Discogs.Data.MasterReleaseVersion.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.MasterReleaseVersion.Response">
            <summary>
                Response
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.Discogs.Data.MasterReleaseVersion.#ctor">
            <summary>
            Create new MasterReleaseVersion and clear the log
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.Discogs.Data.MasterReleaseVersion.#ctor(MusicApiCollection.Sites.Discogs.Data.MasterReleaseVersionResult)">
            <summary>
                Create new MasterReleaseVersion with Result
            </summary>
            <param name="data">Result</param>
        </member>
        <member name="T:MusicApiCollection.Sites.Discogs.Data.MasterReleaseVersionResult">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.MasterReleaseVersionResult.Pagination">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.MasterReleaseVersionResult.Versions">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.Discogs.Data.Version">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Version.Status">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Version.Thumb">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Version.Title">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Version.Country">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Version.Format">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Version.Label">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Version.Released">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Version.Catno">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Version.ResourceUrl">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Version.Id">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.Discogs.Data.Query">
            <remarks />
        </member>
        <member name="F:MusicApiCollection.Sites.Discogs.Data.Query.Data">
            <summary>
                All possible Data
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Query.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.Discogs.Data.Query.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Query.Response">
            <summary>
                Response
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.Discogs.Data.Query.#ctor">
            <summary>
            Create new Query and clear the log
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.Discogs.Data.Query.#ctor(MusicApiCollection.Sites.Discogs.Data.QueryResult)">
            <summary>
                Create new Query with Result
            </summary>
            <param name="data">Result</param>
        </member>
        <member name="T:MusicApiCollection.Sites.Discogs.Data.QueryResult">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.QueryResult.Pagination">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.QueryResult.Results">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.Discogs.Data.Result">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Result.Thumb">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Result.Title">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Result.Uri">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Result.ResourceUrl">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Result.Type">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Result.Id">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Result.Style">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Result.Format">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Result.Country">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Result.Barcode">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Result.Community">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Result.Label">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Result.Catno">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Result.Year">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Result.Genre">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.Discogs.Data.Release">
            <remarks />
        </member>
        <member name="F:MusicApiCollection.Sites.Discogs.Data.Release.Data">
            <summary>
                All possible Data
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Release.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.Discogs.Data.Release.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Release.Response">
            <summary>
                Response
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.Discogs.Data.Release.#ctor">
            <summary>
            Create new Release and clear the log
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.Discogs.Data.Release.#ctor(MusicApiCollection.Sites.Discogs.Data.ReleaseResult)">
            <summary>
                Create new Release with Result
            </summary>
            <param name="data">Result</param>
        </member>
        <member name="T:MusicApiCollection.Sites.Discogs.Data.ReleaseResult">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ReleaseResult.Status">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ReleaseResult.Styles">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ReleaseResult.Videos">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ReleaseResult.Series">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ReleaseResult.ReleasedFormatted">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ReleaseResult.Labels">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ReleaseResult.EstimatedWeight">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ReleaseResult.Community">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ReleaseResult.Released">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ReleaseResult.MasterUrl">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ReleaseResult.Year">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ReleaseResult.Images">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ReleaseResult.DateAdded">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ReleaseResult.FormatQuantity">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ReleaseResult.Id">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ReleaseResult.Genres">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ReleaseResult.Thumb">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ReleaseResult.Extraartists">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ReleaseResult.Title">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ReleaseResult.Country">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ReleaseResult.Notes">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ReleaseResult.Identifiers">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ReleaseResult.Companies">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ReleaseResult.Uri">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ReleaseResult.Artists">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ReleaseResult.Formats">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ReleaseResult.DateChanged">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ReleaseResult.ResourceUrl">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ReleaseResult.MasterId">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ReleaseResult.Tracklist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ReleaseResult.DataQuality">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.Discogs.Data.Rating">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Rating.Count">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Rating.Average">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.Discogs.Data.Submitter">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Submitter.Username">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Submitter.ResourceUrl">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.Discogs.Data.Contributor">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Contributor.Username">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Contributor.ResourceUrl">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.Discogs.Data.ReleaseLabel">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ReleaseLabel.Name">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ReleaseLabel.EntityType">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ReleaseLabel.Catno">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ReleaseLabel.ResourceUrl">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ReleaseLabel.Id">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.ReleaseLabel.EntityTypeName">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.Discogs.Data.Identifier">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Identifier.Type">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Identifier.Value">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Identifier.Description">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.Discogs.Data.Company">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Company.Name">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Company.EntityType">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Company.Catno">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Company.ResourceUrl">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Company.Id">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Company.EntityTypeName">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.Discogs.Data.Format">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Format.Descriptions">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Format.Name">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.Discogs.Data.Format.Qty">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.Discogs.Search">
            <summary>
                Search on Discogs
            </summary>
        </member>
        <member name="T:MusicApiCollection.Sites.Discogs.Search.Type">
            <summary>
                Searchtype
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.Discogs.Search.Type.RELEASE">
            <summary>
                Search a Release
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.Discogs.Search.Type.MASTER">
            <summary>
                Search a Master
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.Discogs.Search.Type.ARTIST">
            <summary>
                Search a Artist
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.Discogs.Search.Type.LABEL">
            <summary>
                Search a Label
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.Discogs.Search.Type.NULL">
            <summary>
                Search Nothing
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.Discogs.Search.Release(System.String,System.String,System.String)">
            <summary>
                The Release resource represents a particular physical or digital object released by one or more Artists.
            </summary>
            <param name="id">The Release ID</param>
            <param name="key">User Key</param>
            <param name="secretKey">User Secret Key</param>
            <returns></returns>
        </member>
        <member name="M:MusicApiCollection.Sites.Discogs.Search.MasterRelease(System.String,System.String,System.String)">
            <summary>
                The Master resource represents a set of similar Releases. Masters (also known as “master releases”) have a “main
                Release” which is often the chronologically earliest.
            </summary>
            <param name="id">The Master ID</param>
            <param name="key">User Key</param>
            <param name="secretKey">User Secret Key</param>
            <returns></returns>
        </member>
        <member name="M:MusicApiCollection.Sites.Discogs.Search.MasterReleaseVersion(System.String,System.String,System.String,System.String,System.String)">
            <summary>
                Retrieves a list of all Releases that are versions of this master. Accepts Pagination parameters.
            </summary>
            <param name="id">The Master ID</param>
            <param name="key">User Key</param>
            <param name="secretKey">User Secret Key</param>
            <param name="page">The page you want to request</param>
            <param name="perPage">The number of items per page</param>
            <returns></returns>
        </member>
        <member name="M:MusicApiCollection.Sites.Discogs.Search.Artist(System.String,System.String,System.String)">
            <summary>
                The Artist resource represents a person in the Discogs database who contributed to a Release in some capacity.
            </summary>
            <param name="id">The Artist ID</param>
            <param name="key">User Key</param>
            <param name="secretKey">User Secret Key</param>
            <returns></returns>
        </member>
        <member name="M:MusicApiCollection.Sites.Discogs.Search.ArtistRelease(System.String,System.String,System.String,System.String,System.String)">
            <summary>
                Returns a list of Releases and Masters associated with the Artist.
            </summary>
            <param name="id">The Artist ID</param>
            <param name="key">User Key</param>
            <param name="secretKey">User Secret Key</param>
            <param name="page">The page you want to request</param>
            <param name="perPage">The number of items per page</param>
            <returns></returns>
        </member>
        <member name="M:MusicApiCollection.Sites.Discogs.Search.Label(System.String,System.String,System.String)">
            <summary>
                The Label resource represents a label, company, recording studio, location, or other entity involved with Artists
                and Releases. Labels were recently expanded in scope to include things that aren’t labels – the name is an artifact
                of this history.
            </summary>
            <param name="id">The Label ID</param>
            <param name="key">User Key</param>
            <param name="secretKey">User Secret Key</param>
            <returns></returns>
        </member>
        <member name="M:MusicApiCollection.Sites.Discogs.Search.AllLabelReleases(System.String,System.String,System.String,System.String,System.String)">
            <summary>
                Returns a list of Releases associated with the label.
            </summary>
            <param name="id">The Label ID</param>
            <param name="key">User Key</param>
            <param name="secretKey">User Secret Key</param>
            <param name="page">The page you want to request</param>
            <param name="perPage">The number of items per page</param>
            <returns></returns>
        </member>
        <member name="M:MusicApiCollection.Sites.Discogs.Search.Query(System.String,MusicApiCollection.Sites.Discogs.Search.Type,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
                Issue a search query to the database.
            </summary>
            <param name="query">Your search query</param>
            <param name="type">One of Release, master, artist, label</param>
            <param name="title">Search by combined “Artist Name - Release Title” Title field.</param>
            <param name="releaseTitle">Search Release titles.</param>
            <param name="credit">Search Release credits.</param>
            <param name="artist">Search artist names.</param>
            <param name="anv">Search artist ANV.</param>
            <param name="label">Search label names.</param>
            <param name="genre">Search genres.</param>
            <param name="style">Search styles.</param>
            <param name="country">Search Release country.</param>
            <param name="year">Search Release year.</param>
            <param name="format">Search formats.</param>
            <param name="catno">Search catalog number.</param>
            <param name="barcode">Search barcodes.</param>
            <param name="track">Search track titles.</param>
            <param name="submitter">Search submitter username.</param>
            <param name="contributor">Search contributor usernames.</param>
            <param name="key">User Key</param>
            <param name="secretKey">User Secret Key</param>
            <param name="page">The page you want to request</param>
            <param name="perPage">The number of items per page</param>
            <returns></returns>
        </member>
        <member name="T:MusicApiCollection.Sites.FanartTv.Data.Movie">
            <remarks />
        </member>
        <member name="F:MusicApiCollection.Sites.FanartTv.Data.Movie.Data">
            <summary>
                All possible Data
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.FanartTv.Data.Movie.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.FanartTv.Data.Movie.#ctor">
            <summary>
                Create new Movie and clear the log
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.FanartTv.Data.Movie.#ctor(MusicApiCollection.Sites.FanartTv.Data.MovieResult)">
            <summary>
                Create new Movie with Result
            </summary>
            <param name="data">Result</param>
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.Movie.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.Movie.Response">
            <summary>
                Response
            </summary>
        </member>
        <member name="T:MusicApiCollection.Sites.FanartTv.Data.MovieResult">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.MovieResult.Name">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.MovieResult.TmdbId">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.MovieResult.ImdbId">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.MovieResult.Hdmovieclearart">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.MovieResult.Hdmovielogo">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.MovieResult.Movieart">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.MovieResult.Moviebackground">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.MovieResult.Movieposter">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.MovieResult.Movielogo">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.MovieResult.Moviedisc">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.MovieResult.Moviethumb">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.MovieResult.Moviebanner">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.FanartTv.Data.MovieArt">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.MovieArt.Id">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.MovieArt.Url">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.MovieArt.Lang">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.MovieArt.Likes">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.FanartTv.Data.MovieDisc">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.MovieDisc.Id">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.MovieDisc.Url">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.MovieDisc.Lang">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.MovieDisc.Likes">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.MovieDisc.Disc">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.MovieDisc.DiscType">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.FanartTv.Data.MovieLatest">
            <remarks />
        </member>
        <member name="F:MusicApiCollection.Sites.FanartTv.Data.MovieLatest.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.FanartTv.Data.MovieLatest.#ctor">
            <summary>
                Create new MovieLatest and clear the log
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.FanartTv.Data.MovieLatest.#ctor(System.Collections.Generic.List{MusicApiCollection.Sites.FanartTv.Data.MovieLatestResult})">
            <summary>
                Create new MovieLatest with Result
            </summary>
            <param name="data">Result</param>
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.MovieLatest.Data">
            <summary>
                All possible Data
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.MovieLatest.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.MovieLatest.Response">
            <summary>
                Response
            </summary>
        </member>
        <member name="T:MusicApiCollection.Sites.FanartTv.Data.MovieLatestResult">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.MovieLatestResult.TmdbId">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.MovieLatestResult.ImdbId">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.MovieLatestResult.Name">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.MovieLatestResult.NewImages">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.MovieLatestResult.TotalImages">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.FanartTv.Data.Artist">
            <remarks />
        </member>
        <member name="F:MusicApiCollection.Sites.FanartTv.Data.Artist.Data">
            <summary>
                All possible Data
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.FanartTv.Data.Artist.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.FanartTv.Data.Artist.#ctor">
            <summary>
                Create new Artist and clear the log
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.FanartTv.Data.Artist.#ctor(MusicApiCollection.Sites.FanartTv.Data.ArtistResult)">
            <summary>
                Create new Artist with Result
            </summary>
            <param name="data">Result</param>
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.Artist.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.Artist.Response">
            <summary>
                Response
            </summary>
        </member>
        <member name="T:MusicApiCollection.Sites.FanartTv.Data.ArtistResult">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.ArtistResult.Name">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.ArtistResult.MbId">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.ArtistResult.AImagesrtistbackground">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.ArtistResult.Artistthumb">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.ArtistResult.Musiclogo">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.ArtistResult.Hdmusiclogo">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.ArtistResult.Albums">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.ArtistResult.Musicbanner">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.FanartTv.Data.Art">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.Art.Id">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.Art.Url">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.Art.Likes">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.Art.Disc">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.Art.Size">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.FanartTv.Data.ArtistImage">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.ArtistImage.Id">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.ArtistImage.Url">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.ArtistImage.Likes">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.FanartTv.Data.ArtistLatest">
            <remarks />
        </member>
        <member name="F:MusicApiCollection.Sites.FanartTv.Data.ArtistLatest.Data">
            <summary>
                All possible Data
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.FanartTv.Data.ArtistLatest.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.FanartTv.Data.ArtistLatest.#ctor">
            <summary>
                Create new ArtistLatest and clear the log
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.FanartTv.Data.ArtistLatest.#ctor(System.Collections.Generic.List{MusicApiCollection.Sites.FanartTv.Data.LatestResult})">
            <summary>
                Create new ArtistLatest with Result
            </summary>
            <param name="data">Result</param>
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.ArtistLatest.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.ArtistLatest.Response">
            <summary>
                Response
            </summary>
        </member>
        <member name="T:MusicApiCollection.Sites.FanartTv.Data.LatestResult">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.LatestResult.Id">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.LatestResult.Name">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.LatestResult.NewImages">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.LatestResult.TotalImages">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.FanartTv.Data.Label">
            <remarks />
        </member>
        <member name="F:MusicApiCollection.Sites.FanartTv.Data.Label.Data">
            <summary>
                All possible Data
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.FanartTv.Data.Label.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.FanartTv.Data.Label.#ctor">
            <summary>
                Create new Label and clear the log
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.FanartTv.Data.Label.#ctor(MusicApiCollection.Sites.FanartTv.Data.LabelResult)">
            <summary>
                Create new Label with Result
            </summary>
            <param name="data">Result</param>
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.Label.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.Label.Response">
            <summary>
                Response
            </summary>
        </member>
        <member name="T:MusicApiCollection.Sites.FanartTv.Data.LabelResult">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.LabelResult.Id">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.LabelResult.Name">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.LabelResult.Labels">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.FanartTv.Data.Musiclabel">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.Musiclabel.Id">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.Musiclabel.Url">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.Musiclabel.Colour">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.Musiclabel.Likes">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.FanartTv.Data.Album">
            <remarks />
        </member>
        <member name="F:MusicApiCollection.Sites.FanartTv.Data.Album.Data">
            <summary>
                All possible Data
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.FanartTv.Data.Album.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.FanartTv.Data.Album.#ctor">
            <summary>
                Create new Album and clear the log
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.FanartTv.Data.Album.#ctor(MusicApiCollection.Sites.FanartTv.Data.AlbumResult)">
            <summary>
                Create new Album with Result
            </summary>
            <param name="data">Result</param>
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.Album.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.Album.Response">
            <summary>
                Response
            </summary>
        </member>
        <member name="T:MusicApiCollection.Sites.FanartTv.Data.AlbumResult">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.AlbumResult.Name">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.AlbumResult.MbidId">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.AlbumResult.Albums">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.FanartTv.Data.Albums">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.Albums.Cdart">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.Albums.Albumcover">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.FanartTv.Data.TvShow">
            <remarks />
        </member>
        <member name="F:MusicApiCollection.Sites.FanartTv.Data.TvShow.Data">
            <summary>
                All possible Data
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.TvShow.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.FanartTv.Data.TvShow.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.TvShow.Response">
            <summary>
                Response
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.FanartTv.Data.TvShow.#ctor">
            <summary>
                Create new TvShow and clear the log
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.FanartTv.Data.TvShow.#ctor(MusicApiCollection.Sites.FanartTv.Data.TvShowResult)">
            <summary>
                Create new TvShow with Result
            </summary>
            <param name="data">Result</param>
        </member>
        <member name="T:MusicApiCollection.Sites.FanartTv.Data.TvShowResult">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.TvShowResult.Name">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.TvShowResult.TheTvdbId">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.TvShowResult.Clearlogo">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.TvShowResult.Tvthumb">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.TvShowResult.HdTListvlogo">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.TvShowResult.Clearart">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.TvShowResult.Showbackground">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.TvShowResult.Seasonposter">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.TvShowResult.Seasonthumb">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.TvShowResult.Hdclearart">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.TvShowResult.Tvbanner">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.TvShowResult.Tvposter">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.TvShowResult.Characterart">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.TvShowResult.Seasonbanner">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.FanartTv.Data.TvArt">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.TvArt.Id">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.TvArt.Url">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.TvArt.Lang">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.TvArt.Likes">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.FanartTv.Data.TvImage">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.TvImage.Id">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.TvImage.Url">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.TvImage.Lang">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.TvImage.Likes">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.TvImage.Season">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.FanartTv.Data.TvLatest">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.TvLatest.Data">
            <summary>
                All possible Data
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.TvLatest.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.FanartTv.Data.TvLatest.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.TvLatest.Response">
            <summary>
                Response
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.FanartTv.Data.TvLatest.#ctor">
            <summary>
                Create new TvLatest and clear the log
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.FanartTv.Data.TvLatest.#ctor(System.Collections.Generic.List{MusicApiCollection.Sites.FanartTv.Data.TvLatestResult})">
            <summary>
                Create new TvLatest with Result
            </summary>
            <param name="data">Result</param>
        </member>
        <member name="T:MusicApiCollection.Sites.FanartTv.Data.TvLatestResult">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.TvLatestResult.Id">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.TvLatestResult.Name">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.TvLatestResult.NewImages">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.FanartTv.Data.TvLatestResult.TotalImages">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.FanartTv.Search">
            <summary>
                Search all Informations for Movie
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.FanartTv.Search.Movie(System.String,System.String,System.String)">
            <summary>
                Get Images for Movie
            </summary>
            <param name="imdbTmdbId">Numeric tmdb_id or imdb_id of the movie.</param>
            <param name="apiKey">Users api_key</param>
            <param name="clientKey">Users client_key</param>
        </member>
        <member name="M:MusicApiCollection.Sites.FanartTv.Search.LatestMovie(System.String,System.String)">
            <summary>
                Get images for Latest Movies
            </summary>
            <param name="apiKey">Users api_key</param>
            <param name="clientKey">Users client_key</param>
        </member>
        <member name="M:MusicApiCollection.Sites.FanartTv.Search.TvShow(System.String,System.String,System.String)">
            <summary>
                Get images for a TvShow
            </summary>
            <param name="theTvBbId">thetvdb id for the show.</param>
            <param name="apiKey">Users api_key</param>
            <param name="clientKey">Users client_key</param>
        </member>
        <member name="M:MusicApiCollection.Sites.FanartTv.Search.LatestTvShow(System.String,System.String)">
            <summary>
                Get images for Latest Shows
            </summary>
            <param name="apiKey">Users api_key</param>
            <param name="clientKey">Users client_key</param>
        </member>
        <member name="M:MusicApiCollection.Sites.FanartTv.Search.Album(System.String,System.String,System.String)">
            <summary>
                Get Images for Album
            </summary>
            <param name="mbId">Albums musicbrainz Release-group id</param>
            <param name="apiKey">Users api_key</param>
            <param name="clientKey">Users client_key</param>
        </member>
        <member name="M:MusicApiCollection.Sites.FanartTv.Search.Artist(System.String,System.String,System.String)">
            <summary>
                Get Images for Artist
            </summary>
            <param name="mbId">Musicbrainz id for the artist</param>
            <param name="apiKey">Users api_key</param>
            <param name="clientKey">Users client_key</param>
        </member>
        <member name="M:MusicApiCollection.Sites.FanartTv.Search.Label(System.String,System.String,System.String)">
            <summary>
                Get Images for Label
            </summary>
            <param name="mbId">Musicbrainz id for the artist</param>
            <param name="apiKey">Users api_key</param>
            <param name="clientKey">Users client_key</param>
        </member>
        <member name="M:MusicApiCollection.Sites.FanartTv.Search.LatestArtist(System.String,System.String)">
            <summary>
                Get Images for Latest Artists
            </summary>
            <param name="apiKey">Users api_key</param>
            <param name="clientKey">Users client_key</param>
        </member>
        <member name="T:MusicApiCollection.Sites.FreeDB.Commands">
            <summary>
                Commands
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.FreeDB.Commands.Read(System.String,System.String)">
            <summary>
                Build a Command for Read
            </summary>
            <param name="categorie">Categorie</param>
            <param name="discId">DiscId</param>
            <returns></returns>
        </member>
        <member name="M:MusicApiCollection.Sites.FreeDB.Commands.Query(System.String,System.Int32,System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
            Build Command for Query
            </summary>
            <param name="discId">DiscId</param>
            <param name="tracksCount">Number of Tracks</param>
            <param name="offsets">Frame offset of the starting location of each track</param>
            <param name="length">Total playing length of CD in seconds</param>
            <returns></returns>
        </member>
        <member name="M:MusicApiCollection.Sites.FreeDB.Commands.Hello">
            <summary>
                Build the Infoquery
            </summary>
            <returns></returns>
        </member>
        <member name="T:MusicApiCollection.Sites.FreeDB.Data.Disk">
            <remarks />
        </member>
        <member name="F:MusicApiCollection.Sites.FreeDB.Data.Disk.Data">
            <summary>
                All possible Data
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.FreeDB.Data.Disk.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.FreeDB.Data.Disk.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.FreeDB.Data.Disk.Response">
            <summary>
                Response
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.FreeDB.Data.Disk.#ctor">
            <summary>
                Create new Disk and clear the log
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.FreeDB.Data.Disk.#ctor(MusicApiCollection.Sites.FreeDB.Data.DiskResult)">
            <summary>
                Create new Disk with Result
            </summary>
            <param name="data">Result</param>
        </member>
        <member name="T:MusicApiCollection.Sites.FreeDB.Data.DiskResult">
            <summary>
                Data for a Disc
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.FreeDB.Data.DiskResult.Title">
            <summary>
                Title
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.FreeDB.Data.DiskResult.Artist">
            <summary>
                Artist
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.FreeDB.Data.DiskResult.DiskLength">
            <summary>
                DiskLength
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.FreeDB.Data.DiskResult.Genre">
            <summary>
                Genre
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.FreeDB.Data.DiskResult.Year">
            <summary>
                Year
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.FreeDB.Data.DiskResult.DiskIds">
            <summary>
                DiskIds
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.FreeDB.Data.DiskResult.TrackFramesOffsets">
            <summary>
                TrackFramesOffsets
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.FreeDB.Data.DiskResult.Tracks">
            <summary>
                Tracks
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.FreeDB.Data.DiskResult.Attributes">
            <summary>
                Attributes
            </summary>
        </member>
        <member name="T:MusicApiCollection.Sites.FreeDB.Data.Result">
            <remarks />
        </member>
        <member name="F:MusicApiCollection.Sites.FreeDB.Data.Result.Data">
            <summary>
                All possible Data
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.FreeDB.Data.Result.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.FreeDB.Data.Result.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.FreeDB.Data.Result.Response">
            <summary>
                Response
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.FreeDB.Data.Result.#ctor">
            <summary>
                Create new Result and clear the log
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.FreeDB.Data.Result.#ctor(MusicApiCollection.Sites.FreeDB.Data.FreeDbResult)">
            <summary>
                Create new Result with Result
            </summary>
            <param name="data">Result</param>
        </member>
        <member name="T:MusicApiCollection.Sites.FreeDB.Data.FreeDbResult">
            <summary>
                Server response
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.FreeDB.Data.FreeDbResult.Artist">
            <summary>
                Artist
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.FreeDB.Data.FreeDbResult.Categorie">
            <summary>
                Categorie
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.FreeDB.Data.FreeDbResult.Code">
            <summary>
                Server response code (three digit code)
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.FreeDB.Data.FreeDbResult.DiscId">
            <summary>
                DiscId
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.FreeDB.Data.FreeDbResult.Info">
            <summary>
                Informations about the code
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.FreeDB.Data.FreeDbResult.Results">
            <summary>
                List of Results
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.FreeDB.Data.FreeDbResult.Title">
            <summary>
                itle
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.FreeDB.Data.FreeDbResult.#ctor">
            <summary>
                Response
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.FreeDB.Data.FreeDbResult.#ctor(System.String)">
            <summary>
                Response
            </summary>
        </member>
        <member name="T:MusicApiCollection.Sites.FreeDB.Data.Query">
            <summary>
                Query
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.FreeDB.Data.Query.Data">
            <summary>
                All possible Data
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.FreeDB.Data.Query.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.FreeDB.Data.Query.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.FreeDB.Data.Query.Response">
            <summary>
                Response
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.FreeDB.Data.Query.#ctor">
            <summary>
                Create new Query and clear the log
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.FreeDB.Data.Query.#ctor(MusicApiCollection.Sites.FreeDB.Data.QueryResult)">
            <summary>
                Create new Query with Result
            </summary>
            <param name="data">Result</param>
        </member>
        <member name="T:MusicApiCollection.Sites.FreeDB.Data.QueryResult">
            <summary>
                QueryResult
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.FreeDB.Data.QueryResult.Code">
            <summary>
                Server response code (three digit code)
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.FreeDB.Data.QueryResult.Info">
            <summary>
                Informations about the code
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.FreeDB.Data.QueryResult.Results">
            <summary>
                List of Results
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.FreeDB.Data.QueryResult.#ctor">
            <summary>
                Response
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.FreeDB.Data.QueryResult.#ctor(System.String)">
            <summary>
                Response
            </summary>
        </member>
        <member name="T:MusicApiCollection.Sites.FreeDB.Data.QueryResultCd">
            <summary>
                Queryresult as CD
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.FreeDB.Data.QueryResultCd.Categorie">
            <summary>
                Categorie
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.FreeDB.Data.QueryResultCd.DiscId">
            <summary>
                DiscId
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.FreeDB.Data.QueryResultCd.Artist">
            <summary>
                Artist
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.FreeDB.Data.QueryResultCd.Title">
            <summary>
                itle
            </summary>
        </member>
        <member name="T:MusicApiCollection.Sites.FreeDB.Parser">
            <summary>
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.FreeDB.Parser.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.FreeDB.Parser.Parse(System.String)">
            <summary>
                Parse a XMCD string
            </summary>
            <param name="text">XMCD string</param>
            <returns>Disc</returns>
        </member>
        <member name="T:MusicApiCollection.Sites.FreeDB.Search">
            <summary>
                Search on FreeDb
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.FreeDB.Search.Read(System.String,System.String)">
            <summary>
                Read entry from database
            </summary>
            <param name="categorie">Categorie</param>
            <param name="discId">DiscId</param>
            <returns></returns>
        </member>
        <member name="M:MusicApiCollection.Sites.FreeDB.Search.Categories">
            <summary>
            List the genre categories
            </summary>
            <returns></returns>
        </member>
        <member name="M:MusicApiCollection.Sites.FreeDB.Search.Sites">
            <summary>
            Server sites
            </summary>
            <returns></returns>
        </member>
        <member name="M:MusicApiCollection.Sites.FreeDB.Search.Query(System.String,System.Int32,System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
            Query database for matching entries
            </summary>
            <param name="discId">DiscId</param>
            <param name="tracksCount">Total number of tracks on CD</param>
            <param name="offsets">Frame offset of the starting location of each track</param>
            <param name="length">Total playing length of CD in seconds</param>
            <returns></returns>
        </member>
        <member name="M:MusicApiCollection.Sites.FreeDB.Search.Version">
            <summary>
            Server version
            </summary>
            <returns></returns>
        </member>
        <member name="M:MusicApiCollection.Sites.FreeDB.Search.Help">
            <summary>
            Help
            </summary>
            <returns></returns>
        </member>
        <member name="T:MusicApiCollection.Sites.GraceNote.Commands.Option">
            <summary>
                Options for a Query
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.GraceNote.Commands.Option.PREFER_XID">
            <summary>
                For ALBUM_SEARCHES in SINGLE_BEST mode, you can influence the best match selection with the PREFER_XID option.
                This option favors matches that have an XID (a third-party external ID) that matches the value specified in
                PREFER_XID.
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.GraceNote.Commands.Option.COVER_SIZE">
            <summary>
                The COVER_SIZE option lets the client applications select an order of preference for the cover art size.
                It does not limit or filter the cover sizes returned by a query, just their order.
                Gracenote strongly encourages the use of the COVER_SIZE option. Specify the order as a comma-separated list in the
                VALUE node.
                Supported sizes are XLARGE, LARGE, SMALL, MEDIUM, and THUMBNAIL.
                The Gracenote Media Recognition Service tries to obtain cover art in the first preferred size.
                If this is not available, it tries for the second size, and so on. Only specify the sizes you want to be ordered.
                By default, Gracenote Media Recognition Service returns images in this order: MEDIUM, LARGE, SMALL, XLARGE, and
                THUMBNAIL.
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.GraceNote.Commands.Option.FALLBACK_GENRECOVER">
            <summary>
                The FALLBACK_GENRECOVER option instructs the Gracenote Media Recognition Service to return the album's genre cover
                art if the actual cover art is not available.
                By default, this option is disabled. If the response returns genre cover art the URL attribute TYPE is set to
                GENRE_COVERART.
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.GraceNote.Commands.Option.RETURN_COVER">
            <summary>
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.GraceNote.Commands.Option.SELECT_EXTENDED">
            <summary>
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.GraceNote.Commands.Option.SELECT_DETAIL">
            <summary>
                The FALLBACK_GENRECOVER option instructs the Gracenote Media Recognition Service to return the album's genre cover
                art if the actual cover art is not available.
                By default, this option is disabled.
                If the response returns genre cover art the URL attribute TYPE is set to GENRE_COVERART.
            </summary>
        </member>
        <member name="T:MusicApiCollection.Sites.GraceNote.Data.Album">
            <remarks />
        </member>
        <member name="F:MusicApiCollection.Sites.GraceNote.Data.Album.Data">
            <summary>
                All possible Data
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.GraceNote.Data.Album.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.GraceNote.Data.Album.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.GraceNote.Data.Album.Response">
            <summary>
                Response
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.GraceNote.Data.Album.#ctor">
            <summary>
                Create new Album and clear the log
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.GraceNote.Data.Album.#ctor(MusicApiCollection.Sites.GraceNote.Data.AlbumResult)">
            <summary>
                Create new Album with Result
            </summary>
            <param name="data">Result</param>
        </member>
        <member name="T:MusicApiCollection.Sites.GraceNote.Data.AlbumResult">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.GraceNote.Data.AlbumResult.Response">
            <summary>
            </summary>
        </member>
        <member name="T:MusicApiCollection.Sites.GraceNote.Data.Response">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.GraceNote.Data.Response.Range">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.GraceNote.Data.Response.Album">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.GraceNote.Data.Response.Status">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.GraceNote.Data.Range">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.GraceNote.Data.Range.Count">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.GraceNote.Data.Range.Start">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.GraceNote.Data.Range.End">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.GraceNote.Data.ResponseAlbum">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.GraceNote.Data.ResponseAlbum.GnId">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.GraceNote.Data.ResponseAlbum.Artist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.GraceNote.Data.ResponseAlbum.Title">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.GraceNote.Data.ResponseAlbum.PkgLang">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.GraceNote.Data.ResponseAlbum.Date">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.GraceNote.Data.ResponseAlbum.Genre">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.GraceNote.Data.ResponseAlbum.MatchedTrackNum">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.GraceNote.Data.ResponseAlbum.TrackCount">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.GraceNote.Data.ResponseAlbum.Track">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.GraceNote.Data.ResponseAlbum.Ord">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.GraceNote.Data.ResponseAlbum.Url">
            <summary>
            </summary>
        </member>
        <member name="T:MusicApiCollection.Sites.GraceNote.Data.Track">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.GraceNote.Data.Track.TrackNum">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.GraceNote.Data.Track.GnId">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.GraceNote.Data.Track.Title">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.GraceNote.Data.Track.Genre">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.GraceNote.Data.Track.Mood">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.GraceNote.Data.Track.Tempo">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.GraceNote.Data.ResponseAlbumUrl">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.GraceNote.Data.ResponseAlbumUrl.Type">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.GraceNote.Data.ResponseAlbumUrl.Size">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.GraceNote.Data.ResponseAlbumUrl.Width">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.GraceNote.Data.ResponseAlbumUrl.Height">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.GraceNote.Data.ResponseAlbumUrl.Value">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.GraceNote.Data.Genre">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.GraceNote.Data.Genre.Num">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.GraceNote.Data.Genre.Id">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.GraceNote.Data.Genre.Value">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.GraceNote.Data.Mood">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.GraceNote.Data.Mood.Num">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.GraceNote.Data.Mood.Id">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.GraceNote.Data.Mood.Value">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.GraceNote.Data.Tempo">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.GraceNote.Data.Tempo.Num">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.GraceNote.Data.Tempo.Id">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.GraceNote.Data.Tempo.Value">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.GraceNote.Search">
            <summary>
                Search on GraceNote
            </summary>
        </member>
        <member name="T:MusicApiCollection.Sites.GraceNote.Search.Mode">
            <summary>
                A single best album search returns the only one album that is the best match for your search criteria. <br />
                Two modes are available for single-best matching: SINGLE_BEST and SINGLE_BEST_COVER. <br />
                In general, use SINGLE_BEST to return the best album match without its cover art. <br />
                To get the single best album and its cover art, use SINGLE_BEST_COVER.
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.GraceNote.Search.Mode.SINGLE_BEST">
            <summary>
                Returns album metadata, without cover art, based on the specified parameters (one or more of artist name, album
                Title, and track Title). <br />
                Unless there is no match, this query always returns only one album (known as the best match). <br />
                To influence the best match selection, you can use the PREFER_XID option with SINGLE_BEST. <br />
                This option favors matches that have an XID (a third-party external ID) that matches the value specified in
                PREFER_XID
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.GraceNote.Search.Mode.SINGLE_BEST_COVER">
            <summary>
                Returns album metadata, including cover art, based on artist, album, and track strings. <br />
                Unless there is no match, this query always returns only one album (known as the best match), along with its cover
                art.
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.GraceNote.Search.Album(System.String,System.String,System.String)">
            <summary>
                Search a Album
            </summary>
            <param name="artist">Artist</param>
            <param name="albumTitle">Albumtitle</param>
            <param name="trackTitle">Tracktitle</param>
            <returns></returns>
        </member>
        <member name="M:MusicApiCollection.Sites.GraceNote.Search.Album(System.String,System.String,System.String,MusicApiCollection.Sites.GraceNote.Search.Mode)">
            <summary>
                Search a Album
            </summary>
            <param name="artist">Artist</param>
            <param name="albumTitle">Albumtitle</param>
            <param name="trackTitle">Tracktitle</param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="T:MusicApiCollection.Sites.Lyrics.Lyric">
            <summary>
                Result
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.Lyrics.Lyric.Data">
            <summary>
                Data for the Request
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.Lyrics.Lyric.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.Lyrics.Lyric.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.Lyrics.Lyric.Response">
            <summary>
                Response
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.Lyrics.Lyric.#ctor">
            <summary>
                Create new Lyric and clear the log
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.Lyrics.Lyric.#ctor(MusicApiCollection.Sites.Lyrics.LyricResult)">
            <summary>
                Create new Lyric with Result
            </summary>
            <param name="data">Result</param>
        </member>
        <member name="T:MusicApiCollection.Sites.Lyrics.LyricResult">
            <summary>
                Song Lyric
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.Lyrics.LyricResult.Writers">
            <summary>
                Songwrs
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.Lyrics.LyricResult.Text">
            <summary>
                Songtext
            </summary>
        </member>
        <member name="T:MusicApiCollection.Sites.Lyrics.Writer">
            <summary>
                Songwriter
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.Lyrics.Writer.FirstName">
            <summary>
                Fitstname
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.Lyrics.Writer.LastName">
            <summary>
                Lastname
            </summary>
        </member>
        <member name="T:MusicApiCollection.Sites.Lyrics.LyricsOverload.Search">
            <summary>
                Search in LyricsOverload
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.Lyrics.LyricsOverload.Search.Lyric(System.String,System.String)">
            <summary>
                Search a Lyric
            </summary>
            <param name="artist">Artist</param>
            <param name="title">SongTitle</param>
            <returns></returns>
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.Annotation">
            <remarks />
        </member>
        <member name="F:MusicApiCollection.Sites.MusicBrainz.Data.Annotation.Data">
            <summary>
                All possible Data
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Annotation.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.MusicBrainz.Data.Annotation.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Annotation.Response">
            <summary>
                Response
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Data.Annotation.#ctor">
            <summary>
                Create new Annotation and clear the log
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Data.Annotation.#ctor(MusicApiCollection.Sites.MusicBrainz.Data.AnnotationResult)">
            <summary>
                Create new Annotation with Result
            </summary>
            <param name="data">Result</param>
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.AnnotationMetadata">
            <remarks/>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.AnnotationMetadata.Annotationlist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.AnnotationMetadata.Created">
            <remarks/>
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.AnnotationResult">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.AnnotationResult.Data">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.AnnotationResult.Count">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.AnnotationResult.Offset">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.AnnotationData">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.AnnotationData.Entity">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.AnnotationData.Name">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.AnnotationData.Text">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.AnnotationData.Type">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.AnnotationData.Score">
            <summary>
            </summary>
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.Area">
            <remarks />
        </member>
        <member name="F:MusicApiCollection.Sites.MusicBrainz.Data.Area.Data">
            <summary>
                All possible Data
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Area.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.MusicBrainz.Data.Area.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Area.Response">
            <summary>
                Response
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Data.Area.#ctor">
            <summary>
                Create new Area and clear the log
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Data.Area.#ctor(MusicApiCollection.Sites.MusicBrainz.Data.AreaResult)">
            <summary>
                Create new Area with Result
            </summary>
            <param name="data">Result</param>
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.AreaMetadata">
            <remarks/>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.AreaMetadata.Arealist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.AreaMetadata.Created">
            <remarks/>
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.AreaResult">
            <remarks/>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.AreaResult.Data">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.AreaResult.Count">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.AreaResult.Offset">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.AreaData">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.AreaData.Name">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.AreaData.Sortname">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.AreaData.Iso31663">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.AreaData.Iso31661">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.AreaData.Lifespan">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.AreaData.Aliaslist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.AreaData.Relationlist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.AreaData.Id">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.AreaData.Type">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.AreaData.Score">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.AreaAlias">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.AreaAlias.Locale">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.AreaAlias.Sortname">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.AreaAlias.Value">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.AreaRelationlist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.AreaRelationlist.Relation">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.AreaRelationlist.Targettype">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.AreaRelation">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.AreaRelation.Target">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.AreaRelation.Direction">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.AreaRelation.Area">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.AreaRelation.Type">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.AreaRelation.Typeid">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.AreaRelationAreaLifespan">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.AreaRelationAreaLifespan.Ended">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.Artist">
            <remarks />
        </member>
        <member name="F:MusicApiCollection.Sites.MusicBrainz.Data.Artist.Data">
            <summary>
                All possible Data
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Artist.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.MusicBrainz.Data.Artist.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Artist.Response">
            <summary>
                Response
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Data.Artist.#ctor">
            <summary>
                Create new Artist and clear the log
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Data.Artist.#ctor(MusicApiCollection.Sites.MusicBrainz.Data.ArtistResult)">
            <summary>
                Create new Artist with Result
            </summary>
            <param name="data">Result</param>
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.ArtistMetadata">
            <remarks/>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ArtistMetadata.Artistlist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ArtistMetadata.Created">
            <remarks/>
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.ArtistResult">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ArtistResult.Data">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ArtistResult.Count">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ArtistResult.Offset">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.ArtistData">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ArtistData.Name">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ArtistData.Sortname">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ArtistData.Gender">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ArtistData.Country">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ArtistData.Area">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ArtistData.Beginarea">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ArtistData.Endarea">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ArtistData.Disambiguation">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ArtistData.Lifespan">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ArtistData.Aliaslist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ArtistData.Taglist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ArtistData.Id">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ArtistData.Type">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ArtistData.Score">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.Cdstub">
            <remarks />
        </member>
        <member name="F:MusicApiCollection.Sites.MusicBrainz.Data.Cdstub.Data">
            <summary>
                All possible Data
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Cdstub.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.MusicBrainz.Data.Cdstub.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Cdstub.Response">
            <summary>
                Response
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Data.Cdstub.#ctor">
            <summary>
                Create new Cdstub and clear the log
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Data.Cdstub.#ctor(MusicApiCollection.Sites.MusicBrainz.Data.CdstubResult)">
            <summary>
                Create new Cdstub with Result
            </summary>
            <param name="data">Result</param>
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.CdstubMetadata">
            <remarks/>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.CdstubMetadata.Cdstublist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.CdstubMetadata.Created">
            <remarks/>
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.CdstubResult">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.CdstubResult.Data">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.CdstubResult.Count">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.CdstubResult.Offset">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.CdstubData">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.CdstubData.Title">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.CdstubData.Artist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.CdstubData.Barcode">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.CdstubData.Comment">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.CdstubData.Tracklist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.CdstubData.Id">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.CdstubData.Score">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.Freedb">
            <remarks />
        </member>
        <member name="F:MusicApiCollection.Sites.MusicBrainz.Data.Freedb.Data">
            <summary>
                All possible Data
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Freedb.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.MusicBrainz.Data.Freedb.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Freedb.Response">
            <summary>
                Response
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Data.Freedb.#ctor">
            <summary>
                Create new Freedb and clear the log
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Data.Freedb.#ctor(MusicApiCollection.Sites.MusicBrainz.Data.FreedbResult)">
            <summary>
                Create new Freedb with Result
            </summary>
            <param name="data">Result</param>
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.FreedbMetadata">
            <remarks/>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.FreedbMetadata.Freedbdisclist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.FreedbMetadata.Created">
            <remarks/>
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.FreedbResult">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.FreedbResult.Data">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.FreedbResult.Count">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.FreedbResult.Offset">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.FreedbData">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.FreedbData.Title">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.FreedbData.Artist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.FreedbData.Category">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.FreedbData.Year">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.FreedbData.Tracklist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.FreedbData.Id">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.FreedbData.Score">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.Lifespan">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Lifespan.Begin">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Lifespan.End">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Lifespan.Ended">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.Alias">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Alias.Sortname">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Alias.Type">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Alias.Value">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.Iso31661Codelist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Iso31661Codelist.Iso31661Code">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.Iso31663Codelist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Iso31663Codelist.Iso31663Code">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.GArea">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.GArea.Name">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.GArea.Sortname">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.GArea.Id">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.GArea.Type">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.GTracklist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.GTracklist.Track">
            <remarks/>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.GTracklist.Offset">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.GTracklist.Count">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.GTrack">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.GTrack.Position">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.GTrack.Number">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.GTrack.Length">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.GTrack.Recording">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.GTrack.Id">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.Disclist">
            <remarks/>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Disclist.Disc">
            <remarks/>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Disclist.Count">
            <remarks/>
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.Disc">
            <remarks/>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Disc.Sectors">
            <remarks/>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Disc.Offsetlist">
            <remarks/>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Disc.Id">
            <remarks/>
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.DiscOffsetlist">
            <remarks/>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.DiscOffsetlist.Offset">
            <remarks/>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.DiscOffsetlist.Count">
            <remarks/>
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.Offset">
            <remarks/>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Offset.Position">
            <remarks/>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Offset.Value">
            <remarks/>
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.GTag">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.GTag.Name">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.GTag.Count">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.Coordinates">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Coordinates.Latitude">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Coordinates.Longitude">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.GRecording">
            <remarks/>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.GRecording.Title">
            <remarks/>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.GRecording.Length">
            <remarks/>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.GRecording.Artistcredit">
            <remarks/>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.GRecording.Id">
            <remarks/>
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.Namecredit">
            <remarks/>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Namecredit.Name">
            <remarks/>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Namecredit.Artist">
            <remarks/>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Namecredit.Joinphrase">
            <remarks/>
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.Label">
            <remarks />
        </member>
        <member name="F:MusicApiCollection.Sites.MusicBrainz.Data.Label.Data">
            <summary>
                All possible Data
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Label.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.MusicBrainz.Data.Label.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Label.Response">
            <summary>
                Response
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Data.Label.#ctor">
            <summary>
                Create new Label and clear the log
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Data.Label.#ctor(MusicApiCollection.Sites.MusicBrainz.Data.LabelResult)">
            <summary>
                Create new Label with Result
            </summary>
            <param name="data">Result</param>
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.LabelMetadata">
            <remarks/>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.LabelMetadata.Labellist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.LabelMetadata.Created">
            <remarks/>
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.LabelResult">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.LabelResult.Data">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.LabelResult.Count">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.LabelResult.Offset">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.LabelData">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.LabelData.Name">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.LabelData.Sortname">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.LabelData.Country">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.LabelData.Area">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.LabelData.Lifespan">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.LabelData.Aliaslist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.LabelData.Id">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.LabelData.Score">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.LabelData.Type">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.LookupArea">
            <remarks/>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.LookupArea.Data">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.LookupArea.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.MusicBrainz.Data.LookupArea.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.LookupArea.Response">
            <summary>
                Response
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Data.LookupArea.#ctor">
            <summary>
                Create new LookupArea and clear the log
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Data.LookupArea.#ctor(MusicApiCollection.Sites.MusicBrainz.Data.LookupAreaResult)">
            <summary>
                Create new LookupArea with Result
            </summary>
            <param name="data">Result</param>
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.LookupAreaResult">
            <remarks/>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.LookupAreaResult.Name">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.LookupAreaResult.Sortname">
            <remarks/>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.LookupAreaResult.Iso31661">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.LookupAreaResult.Aliaslist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.LookupAreaResult.Taglist">
            <remarks/>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.LookupAreaResult.Id">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.LookupAreaResult.Type">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.AreaTag">
            <remarks/>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.AreaTag.Name">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.AreaTag.Count">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.LookupRelease">
            <remarks/>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.LookupRelease.Data">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.LookupRelease.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.MusicBrainz.Data.LookupRelease.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.LookupRelease.Response">
            <summary>
                Response
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Data.LookupRelease.#ctor">
            <summary>
                Create new LookupRelease and clear the log
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Data.LookupRelease.#ctor(System.Collections.Generic.List{MusicApiCollection.Sites.MusicBrainz.Data.ReleaseData})">
            <summary>
                Create new LookupRelease with Result
            </summary>
            <param name="data">Result</param>
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.LookupReleaseGroup">
            <remarks/>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.LookupReleaseGroup.Data">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.LookupReleaseGroup.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.MusicBrainz.Data.LookupReleaseGroup.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.LookupReleaseGroup.Response">
            <summary>
                Response
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Data.LookupReleaseGroup.#ctor">
            <summary>
                Create new LookupReleaseGroup and clear the log
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Data.LookupReleaseGroup.#ctor(MusicApiCollection.Sites.MusicBrainz.Data.ReleasegroupData)">
            <summary>
                Create new LookupReleaseGroup with Result
            </summary>
            <param name="data">Result</param>
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.LookupUrl">
            <remarks/>
        </member>
        <member name="F:MusicApiCollection.Sites.MusicBrainz.Data.LookupUrl.Data">
            <summary>
                All possible Data
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.LookupUrl.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.MusicBrainz.Data.LookupUrl.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.LookupUrl.Response">
            <summary>
                Response
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Data.LookupUrl.#ctor">
            <summary>
                Create new LookupWork and clear the log
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Data.LookupUrl.#ctor(MusicApiCollection.Sites.MusicBrainz.Data.LookupUrlResult)">
            <summary>
                Create new LookupWork with Result
            </summary>
            <param name="data">Result</param>
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.LookupUrlResult">
            <remarks/>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.LookupUrlResult.Resource">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.LookupUrlResult.Id">
            <remarks/>
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.LookupWork">
            <remarks/>
        </member>
        <member name="F:MusicApiCollection.Sites.MusicBrainz.Data.LookupWork.Data">
            <summary>
                All possible Data
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.LookupWork.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.MusicBrainz.Data.LookupWork.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.LookupWork.Response">
            <summary>
                Response
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Data.LookupWork.#ctor">
            <summary>
                Create new LookupWork and clear the log
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Data.LookupWork.#ctor(MusicApiCollection.Sites.MusicBrainz.Data.LookupWorkresult)">
            <summary>
                Create new LookupWork with Result
            </summary>
            <param name="data">Result</param>
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.LookupWorkresult">
            <remarks/>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.LookupWorkresult.Title">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.LookupWorkresult.Aliaslist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.LookupWorkresult.Id">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.Place">
            <remarks />
        </member>
        <member name="F:MusicApiCollection.Sites.MusicBrainz.Data.Place.Data">
            <summary>
                All possible Data
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Place.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.MusicBrainz.Data.Place.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Place.Response">
            <summary>
                Response
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Data.Place.#ctor">
            <summary>
                Create new Place and clear the log
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Data.Place.#ctor(MusicApiCollection.Sites.MusicBrainz.Data.PlaceResult)">
            <summary>
                Create new Place with Result
            </summary>
            <param name="data">Result</param>
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.PlaceMetadata">
            <remarks/>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.PlaceMetadata.Placelist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.PlaceMetadata.Created">
            <remarks/>
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.PlaceResult">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.PlaceResult.Data">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.PlaceResult.Count">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.PlaceResult.Offset">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.PlaceData">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.PlaceData.Name">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.PlaceData.Address">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.PlaceData.Coordinates">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.PlaceData.Area">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.PlaceData.Lifespan">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.PlaceData.Aliaslist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.PlaceData.Id">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.PlaceData.Type">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.PlaceData.Score">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.Recording">
            <remarks />
        </member>
        <member name="F:MusicApiCollection.Sites.MusicBrainz.Data.Recording.Data">
            <summary>
                All possible Data
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Recording.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.MusicBrainz.Data.Recording.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Recording.Response">
            <summary>
                Response
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Data.Recording.#ctor">
            <summary>
                Create new Recording and clear the log
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Data.Recording.#ctor(MusicApiCollection.Sites.MusicBrainz.Data.RecordingResult)">
            <summary>
                Create new Recording with Result
            </summary>
            <param name="data">Result</param>
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.RecordingMetadata">
            <remarks/>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingMetadata.Recordinglist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingMetadata.Created">
            <remarks/>
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.RecordingResult">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingResult.Data">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingResult.Count">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingResult.Offset">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.RecordingData">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingData.Title">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingData.Length">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingData.Artistcredit">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingData.Releaselist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingData.Isrclist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingData.Id">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingData.Score">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.RecordingNamecredit">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingNamecredit.Artist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingNamecredit.Joinphrase">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.RecordingArtist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingArtist.Name">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingArtist.Sortname">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingArtist.Aliaslist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingArtist.Id">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.RecordingRelease">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingRelease.Title">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingRelease.Status">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingRelease.Artistcredit">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingRelease.Releasegroup">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingRelease.Date">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingRelease.Country">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingRelease.Releaseeventlist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingRelease.Mediumlist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingRelease.Id">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.RecordingReleasegroup">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingReleasegroup.Primarytype">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingReleasegroup.Secondarytypelist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingReleasegroup.Id">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingReleasegroup.Type">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.RecordingSecondarytypelist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingSecondarytypelist.Secondarytype">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.RecordingReleaseeventlist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingReleaseeventlist.Releaseevent">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.RecordingReleaseevent">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingReleaseevent.Date">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingReleaseevent.Area">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.RecordingArea">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingArea.Name">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingArea.Sortname">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingArea.Iso31661Codelist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingArea.Id">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.RecordingMediumlist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingMediumlist.Trackcount">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingMediumlist.Medium">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.RecordingMedium">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingMedium.Position">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingMedium.Format">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingMedium.Tracklist">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.RecordingTracklist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingTracklist.Track">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingTracklist.Count">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingTracklist.Offset">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.RecordingTrack">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingTrack.Number">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingTrack.Title">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingTrack.Length">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingTrack.Id">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.RecordingIsrclist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingIsrclist.Isrc">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.RecordingIsrc">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.RecordingIsrc.Id">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.Release">
            <remarks />
        </member>
        <member name="F:MusicApiCollection.Sites.MusicBrainz.Data.Release.Data">
            <summary>
                All possible Data
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Release.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.MusicBrainz.Data.Release.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Release.Response">
            <summary>
                Response
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Data.Release.#ctor">
            <summary>
                Create new Release and clear the log
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Data.Release.#ctor(MusicApiCollection.Sites.MusicBrainz.Data.ReleaseResult)">
            <summary>
                Create new Release with Result
            </summary>
            <param name="data">Result</param>
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseMetadata">
            <remarks/>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseMetadata.Releaselist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseMetadata.Created">
            <remarks/>
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseResult">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseResult.Data">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseResult.Count">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseResult.Offset">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseData">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseData.Title">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseData.Status">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseData.Packaging">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseData.Quality">
            <remarks/>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseData.Annotation">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseData.Textrepresentation">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseData.Artistcredit">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseData.Releasegroup">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseData.Date">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseData.Country">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseData.Releaseeventlist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseData.Barcode">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseData.Asin">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseData.Coverartarchive">
            <remarks/>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseData.Labelinfolist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseData.Mediumlist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseData.Id">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseData.Score">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseAnnotation">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseAnnotation.Text">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseTextrepresentation">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseTextrepresentation.Language">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseTextrepresentation.Script">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseNamecredit">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseNamecredit.Name">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseNamecredit.Artist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseNamecredit.Joinphrase">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseArtist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseArtist.Name">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseArtist.Sortname">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseArtist.Disambiguation">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseArtist.Aliaslist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseArtist.Id">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseAliaslist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseAliaslist.Alias">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseReleasegroup">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseReleasegroup.Primarytype">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseReleasegroup.Secondarytypelist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseReleasegroup.Id">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseReleasegroup.Type">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseSecondarytypelist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseSecondarytypelist.Secondarytype">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseReleaseeventlist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseReleaseeventlist.Releaseevent">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseReleaseevent">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseReleaseevent.Date">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseReleaseevent.Area">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseArea">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseArea.Name">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseArea.Sortname">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseArea.Iso31661Codelist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseArea.Id">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.Coverartarchive">
            <summary>
            
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Coverartarchive.Artwork">
            <remarks/>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Coverartarchive.Count">
            <remarks/>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Coverartarchive.Front">
            <remarks/>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Coverartarchive.Back">
            <remarks/>
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseLabelinfo">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseLabelinfo.Catalognumber">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseLabelinfo.Label">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseLabelinfoLabel">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseLabelinfoLabel.Name">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseLabelinfoLabel.Id">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseMediumlist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseMediumlist.Trackcount">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseMediumlist.Medium">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseMediumlist.Count">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseMedium">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseMedium.Position">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseMedium.Format">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseMedium.Disclist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleaseMedium.Tracklist">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.Releasegroup">
            <remarks />
        </member>
        <member name="F:MusicApiCollection.Sites.MusicBrainz.Data.Releasegroup.Data">
            <summary>
                All possible Data
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Releasegroup.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.MusicBrainz.Data.Releasegroup.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Releasegroup.Response">
            <summary>
                Response
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Data.Releasegroup.#ctor">
            <summary>
                Create new Releasegroup and clear the log
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Data.Releasegroup.#ctor(MusicApiCollection.Sites.MusicBrainz.Data.ReleasegroupResult)">
            <summary>
                Create new Releasegroup with Result
            </summary>
            <param name="data">Result</param>
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.ReleasegroupMetadata">
            <remarks/>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleasegroupMetadata.Releasegrouplist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleasegroupMetadata.Created">
            <remarks/>
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.ReleasegroupResult">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleasegroupResult.Data">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleasegroupResult.Count">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleasegroupResult.Offset">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.ReleasegroupData">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleasegroupData.Title">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleasegroupData.Primarytype">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleasegroupData.Artistcredit">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleasegroupData.Releaselist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleasegroupData.firstreleasedate">
            <remarks/>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleasegroupData.Id">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleasegroupData.Type">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleasegroupData.Score">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.ReleasegroupArtistcredit">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleasegroupArtistcredit.Namecredit">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.ReleasegroupNamecredit">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleasegroupNamecredit.Artist">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.ReleasegroupArtist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleasegroupArtist.Name">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleasegroupArtist.Sortname">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleasegroupArtist.Disambiguation">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleasegroupArtist.Aliaslist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleasegroupArtist.Id">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.ReleasegroupReleaselist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleasegroupReleaselist.Release">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleasegroupReleaselist.Count">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.ReleasegroupRelease">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleasegroupRelease.Title">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleasegroupRelease.Status">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.ReleasegroupRelease.Id">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.Tag">
            <remarks />
        </member>
        <member name="F:MusicApiCollection.Sites.MusicBrainz.Data.Tag.Data">
            <summary>
                All possible Data
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Tag.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.MusicBrainz.Data.Tag.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Tag.Response">
            <summary>
                Response
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Data.Tag.#ctor">
            <summary>
                Create new Tag and clear the log
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Data.Tag.#ctor(MusicApiCollection.Sites.MusicBrainz.Data.TagResult)">
            <summary>
                Create new Tag with Result
            </summary>
            <param name="data">Result</param>
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.TagMetadata">
            <remarks/>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.TagMetadata.Taglist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.TagMetadata.Created">
            <remarks/>
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.TagResult">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.TagResult.Taglist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.TagResult.Created">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.TagData">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.TagData.Tag">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.TagData.Count">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.TagData.Offset">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.TagTags">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.TagTags.Name">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.TagTags.Score">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.Work">
            <remarks />
        </member>
        <member name="F:MusicApiCollection.Sites.MusicBrainz.Data.Work.Data">
            <summary>
                All possible Data
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Work.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.MusicBrainz.Data.Work.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.Work.Response">
            <summary>
                Response
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Data.Work.#ctor">
            <summary>
                Create new Work and clear the log
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Data.Work.#ctor(MusicApiCollection.Sites.MusicBrainz.Data.WorkResult)">
            <summary>
                Create new Work with Result
            </summary>
            <param name="data">Result</param>
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.WorkMetadata">
            <remarks/>
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.WorkMetadata.Worklist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.WorkMetadata.Created">
            <remarks/>
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.WorkResult">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.WorkResult.Data">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.WorkResult.Count">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.WorkResult.Offset">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.WorkData">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.WorkData.Title">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.WorkData.Language">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.WorkData.Iswclist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.WorkData.Disambiguation">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.WorkData.Aliaslist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.WorkData.Relationlist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.WorkData.Id">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.WorkData.Score">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.WorkData.Type">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.WorkIswclist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.WorkIswclist.Iswc">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.WorkAliaslist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.WorkAliaslist.Alias">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.WorkRelationlist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.WorkRelationlist.Relation">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.WorkRelationlist.Targettype">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.WorkRelation">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.WorkRelation.Direction">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.WorkRelation.Attributelist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.WorkRelation.Artist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.WorkRelation.Type">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.WorkAttributelist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.WorkAttributelist.Attribute">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Data.WorkRelationArtist">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.WorkRelationArtist.Name">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.WorkRelationArtist.Sortname">
            <remarks />
        </member>
        <member name="P:MusicApiCollection.Sites.MusicBrainz.Data.WorkRelationArtist.Id">
            <remarks />
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Lookup">
            <summary>
            Perform a lookup of an entity when you have the MBID for that entity
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Lookup.Area(System.String)">
            <summary>
            
            </summary>
            <param name="musicBrainzId">MusicBrainzId</param>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Lookup.Artist(System.String)">
            <summary>
            
            </summary>
            <param name="musicBrainzId">MusicBrainzId</param>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Lookup.Label(System.String)">
            <summary>
            
            </summary>
            <param name="musicBrainzId">MusicBrainzId</param>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Lookup.Recording(System.String)">
            <summary>
            
            </summary>
            <param name="musicBrainzId">MusicBrainzId</param>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Lookup.Release(System.String)">
            <summary>
            
            </summary>
            <param name="musicBrainzId">MusicBrainzId</param>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Lookup.ReleaseGroup(System.String)">
            <summary>
            
            </summary>
            <param name="musicBrainzId">MusicBrainzId</param>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Lookup.Work(System.String)">
            <summary>
            
            </summary>
            <param name="musicBrainzId">MusicBrainzId</param>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Lookup.Url(System.String)">
            <summary>
            
            </summary>
            <param name="musicBrainzId">MusicBrainzId</param>
        </member>
        <member name="T:MusicApiCollection.Sites.MusicBrainz.Search">
            <summary>
                Search on MusicBrainz
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Search.Annotation(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
                Annotation
            </summary>
            <param name="query">The Searchstring</param>
            <param name="text">The content of the annotation</param>
            <param name="type">The entity type (artist, releasegroup, Release, recording, work, label)</param>
            <param name="name">The name of the entity</param>
            <param name="entity">The entity's MBID</param>
            <param name="limit">
                An integer value defining how many entries should be returned. <br />
                Only values between 1 and 100 (both inclusive) are allowed. <br />
                If not given, this defaults to 25.
            </param>
            <param name="offset">
                Return search results starting at a given offset. <br />
                Used for paging through more than one page of results.
            </param>
            <returns>List of Annotation</returns>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Search.Area(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
                Area
            </summary>
            <param name="query">The Searchstring</param>
            <param name="aid">the area ID</param>
            <param name="alias">the aliases/misspellings for this area</param>
            <param name="area">area name</param>
            <param name="begin">area begin date</param>
            <param name="comment">disambugation comment</param>
            <param name="end">area end date</param>
            <param name="ended">area ended</param>
            <param name="sortname">area sort name</param>
            <param name="iso">area iso1, iso2 or iso3 codes</param>
            <param name="iso1">area iso1 codes</param>
            <param name="iso2">area iso3 codes</param>
            <param name="iso3">area iso3 codes</param>
            <param name="type">the aliases/misspellings for this label</param>
            <param name="limit">
                An integer value defining how many entries should be returned. <br />
                Only values between 1 and 100 (both inclusive) are allowed. <br />
                If not given, this defaults to 25.
            </param>
            <param name="offset">
                Return search results starting at a given offset. <br />
                Used for paging through more than one page of results.
            </param>
            <returns>List of Area</returns>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Search.Artist(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
                Artist
            </summary>
            <param name="query">The Searchstring</param>
            <param name="area">artist area</param>
            <param name="beginarea">artist begin area</param>
            <param name="endarea">artist end area</param>
            <param name="arid">MBID of the artist</param>
            <param name="artist">name of the artist</param>
            <param name="artistaccent">name of the artist with any accent characters retained</param>
            <param name="alias">the aliases/misspellings for the artist</param>
            <param name="begin">artist birth date/band founding date</param>
            <param name="comment">artist comment to differentiate similar artists</param>
            <param name="country">the two letter country code for the artist country or 'unknown'</param>
            <param name="end">artist death date/band dissolution date</param>
            <param name="ended">true if know ended even if do not know end date</param>
            <param name="gender">gender of the artist (“male”, “female”, “other”)</param>
            <param name="ipi">IPI code for the artist</param>
            <param name="sortname">artist sortname</param>
            <param name="tag">a tag applied to the artist</param>
            <param name="type">artist type (“person”, “group”, "other" or “unknown”)</param>
            <param name="limit">
                An integer value defining how many entries should be returned. <br />
                Only values between 1 and 100 (both inclusive) are allowed. <br />
                If not given, this defaults to 25.
            </param>
            <param name="offset">
                Return search results starting at a given offset. <br />
                Used for paging through more than one page of results.
            </param>
            <returns>List of Artist</returns>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Search.CdStub(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
                CDStub
            </summary>
            <param name="query">The Searchstring</param>
            <param name="artist">artist name</param>
            <param name="title">Release name</param>
            <param name="barcode">Release barcode</param>
            <param name="comment">general comments about the Release</param>
            <param name="tracks">number of tracks on the CD stub</param>
            <param name="discid">disc ID of the CD</param>
            <param name="limit">
                An integer value defining how many entries should be returned. <br />
                Only values between 1 and 100 (both inclusive) are allowed. <br />
                If not given, this defaults to 25.
            </param>
            <param name="offset">
                Return search results starting at a given offset. <br />
                Used for paging through more than one page of results.
            </param>
            <returns>List of CDStub</returns>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Search.Freedb(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
                Freedb
            </summary>
            <param name="query">The Searchstring</param>
            <param name="artist">artist name</param>
            <param name="title">Release name</param>
            <param name="discid">FreeDb disc id</param>
            <param name="cat">FreeDb category</param>
            <param name="year">year</param>
            <param name="tracks">number of tracks in the Release</param>
            <param name="limit">
                An integer value defining how many entries should be returned. <br />
                Only values between 1 and 100 (both inclusive) are allowed. <br />
                If not given, this defaults to 25.
            </param>
            <param name="offset">
                Return search results starting at a given offset. <br />
                Used for paging through more than one page of results.
            </param>
            <returns>List of Freedb</returns>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Search.Label(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
                Label
            </summary>
            <param name="query">The Searchstring</param>
            <param name="alias">the aliases/misspellings for this label</param>
            <param name="area">label area</param>
            <param name="begin">label founding date</param>
            <param name="code">label code (only the figures part, i.e. without "LC")</param>
            <param name="comment">label comment to differentiate similar labels</param>
            <param name="country">The two letter country code of the label country</param>
            <param name="end">label dissolution date</param>
            <param name="ended">true if know ended even if do not know end date</param>
            <param name="ipi">ipi</param>
            <param name="label">label name</param>
            <param name="labelaccent">name of the label with any accent characters retained</param>
            <param name="laid">MBID of the label</param>
            <param name="sortname">label sortname</param>
            <param name="type">label type</param>
            <param name="tag">folksonomy tag</param>
            <param name="limit">
                An integer value defining how many entries should be returned. <br />
                Only values between 1 and 100 (both inclusive) are allowed. <br />
                If not given, this defaults to 25.
            </param>
            <param name="offset">
                Return search results starting at a given offset. <br />
                Used for paging through more than one page of results.
            </param>
            <returns>List of Label</returns>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Search.Place(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
                Place
            </summary>
            <param name="query">The Searchstring</param>
            <param name="pid">the place ID</param>
            <param name="address">the address of this place</param>
            <param name="alias">the aliases/misspellings for this area</param>
            <param name="area">area name</param>
            <param name="begin">place begin date</param>
            <param name="comment">disambiguation comment</param>
            <param name="end">place end date</param>
            <param name="ended">place ended</param>
            <param name="lat">place latitude</param>
            <param name="Long">place longitude</param>
            <param name="sortname">place sort name</param>
            <param name="type">the aliases/misspellings for this place</param>
            <param name="limit">
                An integer value defining how many entries should be returned. <br />
                Only values between 1 and 100 (both inclusive) are allowed. <br />
                If not given, this defaults to 25.
            </param>
            <param name="offset">
                Return search results starting at a given offset. <br />
                Used for paging through more than one page of results.
            </param>
            <returns>List of Place</returns>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Search.Recording(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
                Recording
            </summary>
            <param name="query">The Searchstring</param>
            <param name="arid">artist id</param>
            <param name="artist">artist name is name(s) as it appears on the recording</param>
            <param name="artistname">an artist on the recording, each artist added as a separate field</param>
            <param name="creditname">name credit on the recording, each artist added as a separate field</param>
            <param name="comment">recording disambiguation comment</param>
            <param name="country">recording Release country</param>
            <param name="date">recording Release date</param>
            <param name="dur">Duration of track in milliseconds</param>
            <param name="format">recording Release format</param>
            <param name="isrc">ISRC of recording</param>
            <param name="number">free Text track number</param>
            <param name="position">the medium that the recording should be found on, first medium is position 1</param>
            <param name="primarytype">primary type of the Release group (album, single, ep, other)</param>
            <param name="puid">PUID of recording</param>
            <param name="qdur">quantized Duration (Duration / 2000)</param>
            <param name="recording">name of recording or a track associated with the recording</param>
            <param name="recordingaccent">name of the recording with any accent characters retained</param>
            <param name="reid">Release id</param>
            <param name="release">Release name</param>
            <param name="rgid">Release group id</param>
            <param name="rid">recording id</param>
            <param name="secondarytype">
                secondary type of the Release group (audiobook, compilation, interview, live, remix
                soundtrack, spokenword)
            </param>
            <param name="status">Release status (official, promotion, Bootleg, Pseudo-Release)</param>
            <param name="tid">track id</param>
            <param name="tnum">track number on medium</param>
            <param name="tracks">number of tracks in the medium on Release</param>
            <param name="tracksrelease">number of tracks on Release as a whole</param>
            <param name="tag">folksonomy tag</param>
            <param name="type">
                type of the Release group, old type mapping for when we did not have separate primary and secondary
                types or use standalone for standalone recordings
            </param>
            <param name="video">true to only show video tracks</param>
            <param name="limit">
                An integer value defining how many entries should be returned. <br />
                Only values between 1 and 100 (both inclusive) are allowed. <br />
                If not given, this defaults to 25.
            </param>
            <param name="offset">
                Return search results starting at a given offset. <br />
                Used for paging through more than one page of results.
            </param>
            <returns>List of Recording</returns>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Search.Release(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
                Release
            </summary>
            <param name="query">The Searchstring</param>
            <param name="field">Description</param>
            <param name="arid">artist id</param>
            <param name="artist">complete artist name(s) as it appears on the Release</param>
            <param name="artistname">an artist on the Release, each artist added as a separate field</param>
            <param name="asin">the Amazon ASIN for this Release</param>
            <param name="barcode">The barcode of this Release</param>
            <param name="catno">The catalog number for this Release, can have multiples when major using an imprint</param>
            <param name="comment">Disambiguation comment</param>
            <param name="country">The two letter country code for the Release country</param>
            <param name="creditname">name credit on the Release, each artist added as a separate field</param>
            <param name="date">The Release date (format: YYYY-MM-DD)</param>
            <param name="discids">total number of cd ids over all mediums for the Release</param>
            <param name="discidsmedium">number of cd ids for the Release on a medium in the Release</param>
            <param name="format">Release format</param>
            <param name="laid">The label id for this Release, a Release can have multiples when major using an imprint</param>
            <param name="label">The name of the label for this Release, can have multiples when major using an imprint</param>
            <param name="lang">
                The language for this Release. Use the three character ISO 639 codes to search for a specific
                language. (e.g. lang:eng)
            </param>
            <param name="mediums">number of mediums in the Release</param>
            <param name="primarytype">primary type of the Release group (album, single, ep, other)</param>
            <param name="puid">The Release contains recordings with these puids</param>
            <param name="quality">The Quality of the Release (low, normal, high)</param>
            <param name="reid">Release id</param>
            <param name="release">Release name</param>
            <param name="releaseaccent">name of the Release with any accent characters retained</param>
            <param name="rgid">Release group id</param>
            <param name="script">The 4 character script code (e.g. latn) used for this Release</param>
            <param name="secondarytype">
                secondary type of the Release group (audiobook, compilation, interview, live, remix,
                soundtrack, spokenword)
            </param>
            <param name="status">Release status (e.g official)</param>
            <param name="tag">a tag that appears on the Release</param>
            <param name="tracks">total number of tracks over all mediums on the Release</param>
            <param name="tracksmedium">number of tracks on a medium in the Release</param>
            <param name="type">
                type of the Release group, old type mapping for when we did not have separate primary and secondary
                types
            </param>
            <param name="limit">
                An integer value defining how many entries should be returned. <br />
                Only values between 1 and 100 (both inclusive) are allowed. <br />
                If not given, this defaults to 25.
            </param>
            <param name="offset">
                Return search results starting at a given offset. <br />
                Used for paging through more than one page of results.
            </param>
            <returns>List of Release</returns>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Search.ReleaseGroup(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
                ReleaseGroup
            </summary>
            <param name="query">The Searchstring</param>
            <param name="arid">MBID of the Release group’s artist</param>
            <param name="artist">Release group artist as it appears on the cover (Artist Credit)</param>
            <param name="artistname">“real name” of any artist that is included in the Release group’s artist credit</param>
            <param name="comment">Release group comment to differentiate similar Release groups</param>
            <param name="creditname">name of any artist in multi-artist credits, as it appears on the cover.</param>
            <param name="primarytype">primary type of the Release group (album, single, ep, other)</param>
            <param name="rgid">MBID of the Release group</param>
            <param name="releasegroup">name of the Release group</param>
            <param name="releasegroupaccent">name of the releasegroup with any accent characters retained</param>
            <param name="releases">number of releases in this Release group</param>
            <param name="release">name of a Release that appears in the Release group</param>
            <param name="reid">MBID of a Release that appears in the Release group</param>
            <param name="secondarytype">
                secondary type of the Release group (audiobook, compilation, interview, live, remix
                soundtrack, spokenword)
            </param>
            <param name="status">status of a Release that appears within the Release group</param>
            <param name="tag">a tag that appears on the Release group</param>
            <param name="type">
                type of the Release group, old type mapping for when we did not have separate primary and secondary
                types
            </param>
            <param name="limit">
                An integer value defining how many entries should be returned. <br />
                Only values between 1 and 100 (both inclusive) are allowed. <br />
                If not given, this defaults to 25.
            </param>
            <param name="offset">
                Return search results starting at a given offset. <br />
                Used for paging through more than one page of results.
            </param>
            <returns>List of ReleaseGroup</returns>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Search.Tag(System.String,System.Int32,System.Int32)">
            <summary>
                Tag
            </summary>
            <param name="query">The Searchstring</param>
            ///
            <param name="limit">
                An integer value defining how many entries should be returned. <br />
                Only values between 1 and 100 (both inclusive) are allowed. <br />
                If not given, this defaults to 25.
            </param>
            <param name="offset">
                Return search results starting at a given offset. <br />
                Used for paging through more than one page of results.
            </param>
            <returns>List of Tag</returns>
        </member>
        <member name="M:MusicApiCollection.Sites.MusicBrainz.Search.Work(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
                Work
            </summary>
            <param name="query">The Searchstring</param>
            <param name="alias">the aliases/misspellings for this work</param>
            <param name="arid">artist id</param>
            <param name="artist">
                artist name, an artist in the context of a work is an artist-work relation such as composer or
                performer
            </param>
            <param name="comment">disambiguation comment</param>
            <param name="iswc">ISWC of work</param>
            <param name="lang">Lyrics language of work</param>
            <param name="tag">folksonomy tag</param>
            <param name="type">work type</param>
            <param name="wid">work id</param>
            <param name="work">name of work</param>
            <param name="workaccent">name of the work with any accent characters retained</param>
            <param name="limit">
                An integer value defining how many entries should be returned. <br />
                Only values between 1 and 100 (both inclusive) are allowed. <br />
                If not given, this defaults to 25.
            </param>
            <param name="offset">
                Return search results starting at a given offset. <br />
                Used for paging through more than one page of results.
            </param>
            <returns>List of Work</returns>
        </member>
        <member name="T:MusicApiCollection.Sites.TheAudioDB.AlbumId">
            <summary>
                TheAudioDb AlbumID
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.TheAudioDB.AlbumId.Id">
            <summary>
                AlbumID
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.TheAudioDB.AlbumId.#ctor(System.String)">
            <summary>
                Create a new AlbumID
            </summary>
            <param name="id">ID</param>
        </member>
        <member name="T:MusicApiCollection.Sites.TheAudioDB.ArtistId">
            <summary>
                TheAudioDb ArtistID
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.TheAudioDB.ArtistId.Id">
            <summary>
                ArtistID
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.TheAudioDB.ArtistId.#ctor(System.String)">
            <summary>
                Create a new ArtistID
            </summary>
            <param name="id">ID</param>
        </member>
        <member name="T:MusicApiCollection.Sites.TheAudioDB.Data.AlbumList">
            <remarks />
        </member>
        <member name="F:MusicApiCollection.Sites.TheAudioDB.Data.AlbumList.Data">
            <summary>
                All possible Data
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.AlbumList.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.TheAudioDB.Data.AlbumList.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.AlbumList.Response">
            <summary>
                Response
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.TheAudioDB.Data.AlbumList.#ctor">
            <summary>
                Create new AlbumList and clear the log
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.TheAudioDB.Data.AlbumList.#ctor(MusicApiCollection.Sites.TheAudioDB.Data.AlbumListResult)">
            <summary>
                Create new AlbumList with Result
            </summary>
            <param name="data">Result</param>
        </member>
        <member name="T:MusicApiCollection.Sites.TheAudioDB.Data.AlbumListResult">
            <summary>
                List of Album
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.AlbumListResult.List">
            <summary>
                List of Album
            </summary>
        </member>
        <member name="T:MusicApiCollection.Sites.TheAudioDB.Data.Album">
            <summary>
                Data for a Album
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Album.IdAlbum">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Album.IdArtist">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Album.StrAlbum">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Album.StrArtist">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Album.IntYearReleased">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Album.StrGenre">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Album.StrSubGenre">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Album.StrReleaseFormat">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Album.IntSales">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Album.StrAlbumThumb">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Album.StrAlbumCDart">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Album.StrDescriptionEn">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Album.StrDescriptionDe">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Album.StrDescriptionFr">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Album.StrDescriptionCn">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Album.StrDescriptionIt">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Album.StrDescriptionJp">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Album.StrDescriptionRu">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Album.StrDescriptionEs">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Album.StrDescriptionPt">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Album.StrDescriptionSe">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Album.StrDescriptionNl">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Album.StrDescriptionHu">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Album.StrDescriptionNo">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Album.StrDescriptionIl">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Album.StrDescriptionPl">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Album.IntLoved">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Album.IntScore">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Album.StrReview">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Album.StrMood">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Album.StrTheme">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Album.StrSpeed">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Album.StrLocation">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Album.StrMusicBrainzId">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Album.StrMusicBrainzArtistId">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Album.StrItunesId">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Album.StrAmazonId">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Album.StrLocked">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Album.StrDescription">
            <summary>
            </summary>
        </member>
        <member name="T:MusicApiCollection.Sites.TheAudioDB.Data.Artist">
            <remarks />
        </member>
        <member name="F:MusicApiCollection.Sites.TheAudioDB.Data.Artist.Data">
            <summary>
                All possible Data
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Artist.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.TheAudioDB.Data.Artist.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Artist.Response">
            <summary>
                Response
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.TheAudioDB.Data.Artist.#ctor">
            <summary>
                Create new Artist and clear the log
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.TheAudioDB.Data.Artist.#ctor(MusicApiCollection.Sites.TheAudioDB.Data.ArtistResult)">
            <summary>
                Create new Artist with Result
            </summary>
            <param name="data">Result</param>
        </member>
        <member name="T:MusicApiCollection.Sites.TheAudioDB.Data.ArtistList">
            <summary>
                List of Artist
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.ArtistList.List">
            <summary>
                List of Artist
            </summary>
        </member>
        <member name="T:MusicApiCollection.Sites.TheAudioDB.Data.ArtistResult">
            <summary>
                Data for a Artist
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.ArtistResult.Id">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.ArtistResult.Name">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.ArtistResult.NameAlternate">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.ArtistResult.Label">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.ArtistResult.FormedYear">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.ArtistResult.BornYear">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.ArtistResult.DiedYear">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.ArtistResult.Disbanded">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.ArtistResult.Genre">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.ArtistResult.SubGenre">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.ArtistResult.Mood">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.ArtistResult.Website">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.ArtistResult.Facebook">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.ArtistResult.Twitter">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.ArtistResult.BiographyEn">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.ArtistResult.BiographyDe">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.ArtistResult.BiographyFr">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.ArtistResult.BiographyCn">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.ArtistResult.BiographyIt">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.ArtistResult.BiographyJp">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.ArtistResult.BiographyRu">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.ArtistResult.BiographyEs">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.ArtistResult.BiographyPt">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.ArtistResult.BiographySe">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.ArtistResult.BiographyNl">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.ArtistResult.BiographyHu">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.ArtistResult.BiographyNo">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.ArtistResult.BiographyIl">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.ArtistResult.BiographyPl">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.ArtistResult.Gender">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.ArtistResult.Members">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.ArtistResult.Country">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.ArtistResult.Countrycode">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.ArtistResult.ArtistThumb">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.ArtistResult.ArtistLogo">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.ArtistResult.ArtistFanart1">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.ArtistResult.ArtistFanart2">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.ArtistResult.ArtistFanart3">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.ArtistResult.ArtistBanner">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.ArtistResult.MusicBrainzId">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.ArtistResult.LastFmChart">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.ArtistResult.Locked">
            <summary>
            </summary>
        </member>
        <member name="T:MusicApiCollection.Sites.TheAudioDB.Data.DiscographyList">
            <remarks />
        </member>
        <member name="F:MusicApiCollection.Sites.TheAudioDB.Data.DiscographyList.Data">
            <summary>
                All possible Data
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.DiscographyList.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.TheAudioDB.Data.DiscographyList.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.DiscographyList.Response">
            <summary>
                Response
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.TheAudioDB.Data.DiscographyList.#ctor">
            <summary>
                Create new DiscographyList and clear the log
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.TheAudioDB.Data.DiscographyList.#ctor(MusicApiCollection.Sites.TheAudioDB.Data.DiscographyListResult)">
            <summary>
                Create new DiscographyList with Result
            </summary>
            <param name="data">Result</param>
        </member>
        <member name="T:MusicApiCollection.Sites.TheAudioDB.Data.DiscographyListResult">
            <summary>
                List of Discogrphy
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.DiscographyListResult.List">
            <summary>
                List of Discogrphy
            </summary>
        </member>
        <member name="T:MusicApiCollection.Sites.TheAudioDB.Data.Discography">
            <summary>
                Data for a Discogrphy
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Discography.StrAlbum">
            <summary>
                Album
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Discography.IntYearReleased">
            <summary>
                Year of Release
            </summary>
        </member>
        <member name="T:MusicApiCollection.Sites.TheAudioDB.Data.TrackList">
            <remarks />
        </member>
        <member name="F:MusicApiCollection.Sites.TheAudioDB.Data.TrackList.Data">
            <summary>
                All possible Data
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.TrackList.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.TheAudioDB.Data.TrackList.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.TrackList.Response">
            <summary>
                Response
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.TheAudioDB.Data.TrackList.#ctor">
            <summary>
                Create new TrackList and clear the log
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.TheAudioDB.Data.TrackList.#ctor(MusicApiCollection.Sites.TheAudioDB.Data.TrackListResult)">
            <summary>
                Create new TrackList with Result
            </summary>
            <param name="data">Result</param>
        </member>
        <member name="T:MusicApiCollection.Sites.TheAudioDB.Data.TrackListResult">
            <summary>
                List of Track
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.TrackListResult.List">
            <summary>
                List of Track
            </summary>
        </member>
        <member name="T:MusicApiCollection.Sites.TheAudioDB.Data.Track">
            <summary>
                Data for a Track
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Track.IdTrack">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Track.IdAlbum">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Track.IdArtist">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Track.StrTrack">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Track.StrAlbum">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Track.StrArtist">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Track.IntCd">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Track.IntDuration">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Track.StrGenre">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Track.StrDescriptionEn">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Track.StrTrackThumb">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Track.StrTrackLyrics">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Track.StrMusicVid">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Track.StrMusicVidDirector">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Track.StrMusicVidCompany">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Track.StrMusicVidScreen1">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Track.StrMusicVidScreen2">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Track.StrMusicVidScreen3">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Track.IntTrackNumber">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Track.IntLoved">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Track.StrMusicBrainzId">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Track.StrMusicBrainzAlbumId">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Track.StrMusicBrainzArtistId">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Track.StrLocked">
            <summary>
            </summary>
        </member>
        <member name="T:MusicApiCollection.Sites.TheAudioDB.Data.VideoList">
            <remarks />
        </member>
        <member name="F:MusicApiCollection.Sites.TheAudioDB.Data.VideoList.Data">
            <summary>
                All possible Data
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.VideoList.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.TheAudioDB.Data.VideoList.ErrorOccurred">
            <summary>
                Is an Error occurred
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.VideoList.Response">
            <summary>
                Response
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.TheAudioDB.Data.VideoList.#ctor">
            <summary>
                Create new VideoList and clear the log
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.TheAudioDB.Data.VideoList.#ctor(MusicApiCollection.Sites.TheAudioDB.Data.VideoListResult)">
            <summary>
                Create new VideoList with Result
            </summary>
            <param name="data">Result</param>
        </member>
        <member name="T:MusicApiCollection.Sites.TheAudioDB.Data.VideoListResult">
            <summary>
                List of Video
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.VideoListResult.List">
            <summary>
                List of Video
            </summary>
        </member>
        <member name="T:MusicApiCollection.Sites.TheAudioDB.Data.Mvid">
            <summary>
                Data for a Video
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Mvid.ArtistId">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Mvid.MusicBrainzArtistId">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Mvid.AlbumId">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Mvid.TrackId">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Mvid.Track">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Mvid.TrackThumb">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Mvid.MusicVid">
            <summary>
            </summary>
        </member>
        <member name="P:MusicApiCollection.Sites.TheAudioDB.Data.Mvid.Description">
            <summary>
            </summary>
        </member>
        <member name="T:MusicApiCollection.Sites.TheAudioDB.Search">
            <summary>
                Search all Informations
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.TheAudioDB.Search.TrackList(System.String,System.String,System.String)">
            <summary>
                Return track details from artist/track name
            </summary>
            <param name="artistName">Artist</param>
            <param name="trackName">Single</param>
            <param name="apiKey">ApiKey</param>
            <returns></returns>
        </member>
        <member name="M:MusicApiCollection.Sites.TheAudioDB.Search.TrackList(MusicApiCollection.Sites.TheAudioDB.TrackId,System.String)">
            <summary>
                Return All Tracks for Album from known TADB_Track_ID
            </summary>
            <param name="tadbTrackId">TADB_Track_ID</param>
            <param name="apiKey">ApiKey</param>
            <returns></returns>
        </member>
        <member name="M:MusicApiCollection.Sites.TheAudioDB.Search.TrackList(MusicApiCollection.Sites.TheAudioDB.AlbumId,System.String)">
            <summary>
                Return All Tracks for Album from known TADB_Album_ID
            </summary>
            <param name="tadbAlbumId">TADB_Album_ID</param>
            <param name="apiKey">ApiKey</param>
            <returns></returns>
        </member>
        <member name="M:MusicApiCollection.Sites.TheAudioDB.Search.TrackList(System.Guid,System.String)">
            <summary>
                Return individual track info using a known MusicBrainz_Recording_ID
            </summary>
            <param name="mbid">MusicBrainz_Recording_ID</param>
            <param name="apiKey">ApiKey</param>
            <returns></returns>
        </member>
        <member name="M:MusicApiCollection.Sites.TheAudioDB.Search.Top10(System.String,System.String)">
            <summary>
                Return The top 10 Most Loved tracks for an Artist Name
            </summary>
            <param name="artistName">Artist</param>
            <param name="apiKey">ApiKey</param>
            <returns></returns>
        </member>
        <member name="M:MusicApiCollection.Sites.TheAudioDB.Search.Top10(System.Guid,System.String)">
            <summary>
                Return The top 10 Most Loved tracks for an Artist Music Brainz ID
            </summary>
            <param name="mbid">Music_Brainz_Artist_ID</param>
            <param name="apiKey">ApiKey</param>
            <returns></returns>
        </member>
        <member name="M:MusicApiCollection.Sites.TheAudioDB.Search.Artist(System.String,System.String)">
            <summary>
                Return Artist details from artist name
            </summary>
            <param name="artistName">Artist</param>
            <param name="apiKey">ApiKey</param>
            <returns></returns>
        </member>
        <member name="M:MusicApiCollection.Sites.TheAudioDB.Search.Artist(System.Guid,System.String)">
            <summary>
                Return individual Artist info using a known MusicBrainz_Artist_ID
            </summary>
            <param name="mbid">MusicBrainz ID</param>
            <param name="apiKey">ApiKey</param>
            <returns></returns>
        </member>
        <member name="M:MusicApiCollection.Sites.TheAudioDB.Search.Artist(MusicApiCollection.Sites.TheAudioDB.ArtistId,System.String)">
            <summary>
                Return individual Artist info using a known TADB_Artist_ID
            </summary>
            <param name="tadbArtistId">TADB_Artist_ID</param>
            <param name="apiKey">ApiKey</param>
            <returns></returns>
        </member>
        <member name="M:MusicApiCollection.Sites.TheAudioDB.Search.Discography(System.String,System.String)">
            <summary>
                Return Discography for an Artist with Album names and year only
            </summary>
            <param name="artistName">Artist</param>
            <param name="apiKey">ApiKey</param>
            <returns></returns>
        </member>
        <member name="M:MusicApiCollection.Sites.TheAudioDB.Search.Discography(System.Guid,System.String)">
            <summary>
                Return Discography for an Artist with Album names and year only using known MBID
            </summary>
            <param name="mbid">MusicBrainz ID</param>
            <param name="apiKey">ApiKey</param>
            <returns></returns>
        </member>
        <member name="M:MusicApiCollection.Sites.TheAudioDB.Search.Album(System.String,System.String,System.String)">
            <summary>
                Return single album details from artist + album name
            </summary>
            <param name="artistName">Artist</param>
            <param name="albumName">Album</param>
            <param name="apiKey">ApiKey</param>
            <returns></returns>
        </member>
        <member name="M:MusicApiCollection.Sites.TheAudioDB.Search.Album(MusicApiCollection.Sites.TheAudioDB.ArtistId,System.String)">
            <summary>
                Return All Albums for an Artist using known TADB_Artist_ID
            </summary>
            <param name="tadbArtistId">TADB_Artist_ID</param>
            <param name="apiKey">ApiKey</param>
            <returns></returns>
        </member>
        <member name="M:MusicApiCollection.Sites.TheAudioDB.Search.Album(MusicApiCollection.Sites.TheAudioDB.AlbumId,System.String)">
            <summary>
                Return All Albums for an Artist using known TADB_Album_ID
            </summary>
            <param name="tadbAlbumId">TADB_Album_ID</param>
            <param name="apiKey">ApiKey</param>
            <returns></returns>
        </member>
        <member name="M:MusicApiCollection.Sites.TheAudioDB.Search.Album(System.Guid,System.String)">
            <summary>
                Return All Albums for an Artist using known MusicBrainz_Release-Group_ID
            </summary>
            <param name="mbid">MusicBrainz_Release-Group_ID</param>
            <param name="apiKey">ApiKey</param>
            <returns></returns>
        </member>
        <member name="M:MusicApiCollection.Sites.TheAudioDB.Search.Video(MusicApiCollection.Sites.TheAudioDB.ArtistId,System.String)">
            <summary>
                Return all the Music videos for a known TADB_Artist_ID
            </summary>
            <param name="tadbArtistId">TADB_Artist_ID</param>
            <param name="apiKey">ApiKey</param>
            <returns></returns>
        </member>
        <member name="M:MusicApiCollection.Sites.TheAudioDB.Search.Video(System.Guid,System.String)">
            <summary>
                Return all the Music videos for a known Music_Brainz_ID
            </summary>
            <param name="mbid">Music_Brainz_Artist_ID</param>
            <param name="apiKey">ApiKey</param>
            <returns></returns>
        </member>
        <member name="M:MusicApiCollection.Sites.TheAudioDB.Search.Video(System.String,System.String,System.String)">
            <summary>
                Return a Music DVD from artist/mdvd name
            </summary>
            <param name="artistName">Artist</param>
            <param name="dvdName">Music_Dvd_Name</param>
            <param name="apiKey">ApiKey</param>
            <returns></returns>
        </member>
        <member name="T:MusicApiCollection.Sites.TheAudioDB.TrackId">
            <summary>
                TheAudioDb TrackID
            </summary>
        </member>
        <member name="F:MusicApiCollection.Sites.TheAudioDB.TrackId.Id">
            <summary>
                TrackID
            </summary>
        </member>
        <member name="M:MusicApiCollection.Sites.TheAudioDB.TrackId.#ctor(System.String)">
            <summary>
                Create a new TrackID
            </summary>
            <param name="id">ID</param>
        </member>
    </members>
</doc>
